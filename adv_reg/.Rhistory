x = c(100, 110, 120, 130, 140, 150, 160, 170)
y = c(20, 24, 27, 28, 29, 29, 28, 27)
X = cbind(x)
X_p = ortho_poly(X, k = 2, coef = TRUE)
X_p = X_p[, -c(1)]
mult_res = mult_reg(X_p, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
SS_beta1_02 = ASS_calc(X_p, y, index_sol = c(1), index_given = c(0,2), coef = TRUE)
SS_beta2_01 = ASS_calc(X_p, y, index_sol = c(2), index_given = c(0,1), coef = TRUE)
SS_beta1_02 ; SS_beta2_01
SS_beta1_02/MSE ; SS_beta2_01/MSE
beta_hat = mult_res$beta_hat ; beta_hat
F_alpha_1 = qf(0.05, 1, 5, lower.tail = FALSE) ; F_alpha_1
X_p_3 = ortho_poly(X, k = 3, coef = TRUE)
X_p_3 = X_p_3[, -c(1)]
mult_res = mult_reg(X_p_3, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
SS_beta1_023 = ASS_calc(X_p_3, y, index_sol = c(1), index_given = c(0,2,3), coef = TRUE)
SS_beta2_013 = ASS_calc(X_p_3, y, index_sol = c(2), index_given = c(0,1,3), coef = TRUE)
SS_beta3_012 = ASS_calc(X_p_3, y, index_sol = c(3), index_given = c(0,1,2), coef = TRUE)
SS_beta1_023 ; SS_beta2_013 ; SS_beta3_012
SS_beta1_023/MSE ; SS_beta2_013/MSE ; SS_beta3_012/MSE
beta_hat = mult_res$beta_hat ; beta_hat
F_alpha_1 = qf(0.05, 1, 4, lower.tail = FALSE) ; F_alpha_1
## 4차항도 필요한지 검토
X_p_4 = ortho_poly(X, k = 4, coef = TRUE)
X_p_4 = X_p_4[, -c(1)]
mult_res = mult_reg(X_p_4, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
SS_beta1_0234 = ASS_calc(X_p_4, y, index_sol = c(1), index_given = c(0,2,3,4), coef = TRUE)
SS_beta2_0134 = ASS_calc(X_p_4, y, index_sol = c(2), index_given = c(0,1,3,4), coef = TRUE)
SS_beta3_0124 = ASS_calc(X_p_4, y, index_sol = c(3), index_given = c(0,1,2,4), coef = TRUE)
SS_beta4_0123 = ASS_calc(X_p_4, y, index_sol = c(4), index_given = c(0,1,2,3), coef = TRUE)
SS_beta1_0234 ; SS_beta2_0134 ; SS_beta3_0124 ; SS_beta4_0123
SS_beta1_0234/MSE ; SS_beta2_0134/MSE ; SS_beta3_0124/MSE ; SS_beta4_0123/MSE
beta_hat = mult_res$beta_hat ; beta_hat
F_alpha_1 = qf(0.05, 1, 3, lower.tail = FALSE) ; F_alpha_1
x = c(100, 110, 120, 130, 140, 150, 160, 170)
y = c(20, 24, 27, 28, 29, 29, 28, 27)
X = cbind(x)
X_p = ortho_poly(X, k = 2, coef = TRUE)
X_p = X_p[, -c(1)]
mult_res = mult_reg(X_p, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
beta_hat = mult_res$beta_hat
beta_0 = beta_hat[1] ; beta_1 = beta_hat[2] ; beta_2 = beta_hat[3]
plot(x, y, xlab = "x(비료의 양)", ylab = "y(수확량)", cex = 0.5, pch = 19,
main = "2차 직교다항회귀 모형", col = "red")
curve(beta_hat[1] + beta_hat[2] * x + beta_hat[3] * x^2 , n = 101, add = TRUE, col = "lightblue", lwd = 3)
x = c(100, 110, 120, 130, 140, 150, 160, 170)
y = c(20, 24, 27, 28, 29, 29, 28, 27)
X = cbind(x)
X_p = ortho_poly(X, k = 2, coef = TRUE)
X_p = X_p[, -c(1)]
mult_res = mult_reg(X_p, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
beta_hat = mult_res$beta_hat
beta_0 = beta_hat[1] ; beta_1 = beta_hat[2] ; beta_2 = beta_hat[3]
plot(x, y, xlab = "x(비료의 양)", ylab = "y(수확량)", cex = 0.5, pch = 19,
main = "2차 직교다항회귀 모형", col = "red")
curve(beta_hat[1] + beta_hat[2] * x + beta_hat[3] * x^2 , n = 101, add = TRUE, col = "lightblue", lwd = 1.5)
x = c(100, 110, 120, 130, 140, 150, 160, 170)
y = c(20, 24, 27, 28, 29, 29, 28, 27)
X = cbind(x)
X_p = ortho_poly(X, k = 2, coef = TRUE)
X_p = X_p[, -c(1)]
mult_res = mult_reg(X_p, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
beta_hat = mult_res$beta_hat
beta_0 = beta_hat[1] ; beta_1 = beta_hat[2] ; beta_2 = beta_hat[3]
plot(x, y, xlab = "x(비료의 양)", ylab = "y(수확량)", cex = 0.5, pch = 19,
main = "2차 직교다항회귀 모형", col = "red")
curve(beta_hat[1] + beta_hat[2] * x + beta_hat[3] * x^2 , n = 101, add = TRUE, col = "blue", lwd = 1.5)
x = c(100, 110, 120, 130, 140, 150, 160, 170)
y = c(20, 24, 27, 28, 29, 29, 28, 27)
X = cbind(x)
X_p = ortho_poly(X, k = 2, coef = TRUE)
X_p = X_p[, -c(1)]
mult_res = mult_reg(X_p, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
beta_hat = mult_res$beta_hat
beta_0 = beta_hat[1] ; beta_1 = beta_hat[2] ; beta_2 = beta_hat[3]
plot(x, y, xlab = "x(비료의 양)", ylab = "y(수확량)", cex = 0.5, pch = 19,
main = "2차 직교다항회귀 모형", col = "red")
curve(beta_hat[1] + beta_hat[2] * z + beta_hat[3] * z^2 , n = 101, add = TRUE, col = "lightblue", lwd = 3)
x = c(100, 110, 120, 130, 140, 150, 160, 170)
y = c(20, 24, 27, 28, 29, 29, 28, 27)
X = cbind(x)
X_p = ortho_poly(X, k = 2, coef = TRUE)
X_p = X_p[, -c(1)]
mult_res = mult_reg(X_p, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
beta_hat = mult_res$beta_hat
beta_0 = beta_hat[1] ; beta_1 = beta_hat[2] ; beta_2 = beta_hat[3]
plot(x, y, xlab = "x(비료의 양)", ylab = "y(수확량)", cex = 0.5, pch = 19,
main = "2차 직교다항회귀 모형", col = "red")
curve(beta_hat[1] + beta_hat[2] * x + beta_hat[3] * x^2 , n = 101, add = FALSE, col = "lightblue", lwd = 3)
x = c(100, 110, 120, 130, 140, 150, 160, 170)
y = c(20, 24, 27, 28, 29, 29, 28, 27)
X = cbind(x)
X_p = ortho_poly(X, k = 2, coef = TRUE)
X_p = X_p[, -c(1)]
mult_res = mult_reg(X_p, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
beta_hat = mult_res$beta_hat
beta_0 = beta_hat[1] ; beta_1 = beta_hat[2] ; beta_2 = beta_hat[3]
plot(x, y, xlab = "x(비료의 양)", ylab = "y(수확량)", cex = 0.5, pch = 19,
main = "2차 직교다항회귀 모형", col = "red")
curve(beta_hat[1] + beta_hat[2] * ((x-135)/10) + beta_hat[3] * (((x-135)/10)^2 - 63/12) , n = 101, add = TRUE, col = "lightblue", lwd = 3)
solve(mult_res$XtX) * MSE
x = c(1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10)
y = c(0.10, 0.09, 0.15, 0.16, 0.19, 0.19, 0.23, 0.22, 0.23, 0.24,
0.25, 0.25, 0.27, 0.26, 0.28, 0.28, 0.28, 0.29, 0.30, 0.31)
plot(x, y, xlab = "나이", ylab = "y(키와 몸무게의 비kg/cm)", cex = 0.5, pch = 19)
n = length(x)
T1_x_4 = c(rep(1,n))
for (i in 1:n){
if (x[i] - 4 < 0){
T1_x_4[i] = 0
}else{
T1_x_4[i] = x[i] - 4
}
}
X = cbind(x, T1_x_4) ; X
n = length(x)
T1_x_4 = c(rep(1,n))
for (i in 1:n){
if (x[i] - 4 < 0){
T1_x_4[i] = 0
}else{
T1_x_4[i] = x[i] - 4
}
}
X = cbind(x, T1_x_4)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
beta_hat = mult_res$beta_hat ; beta_hat
SSR = mult_res$SSR ; SST = mult_res$SST
R2 = SSR/SST ; R2
T2_x_4 = T1_x_4^2
X = cbind(x, T2_x_4)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE) ; beta_hat = mult_res$beta_hat
beta_hat
T2_x_4 = T1_x_4^2
X = cbind(x, T2_x_4)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE) ; beta_hat = mult_res$beta_hat
beta_hat ; R2 = mult_res$SSR / mult_res$SST ; R2
x2 = x^2 ; X = cbind(x, x2)
mult_res_5 = mult_reg(X, y, alpha = 0.05, coeff = TRUE) ; beta_hat_5 = mult_res_5$beta_hat
beta_hat_5 ; R2 = mult_res_5$SSR/ mult_res_5$SST ; R2
plot(x, y, xlab = "나이", ylab = "y(키와 몸무게의 비kg/cm)", cex = 0.5, pch = 19)
# 접합점 전 구간: x < 4
x_min <- min(x)    # 예: 1
x_knot <- 4
y_min <- beta_hat_2[1] + beta_hat_2[2] * x_min
knitr::opts_chunk$set(echo = TRUE)
source("functions/mult_reg.R", echo = TRUE)
x = c(1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 8, 8, 8, 9, 9, 10)
y = c(5, 6, 6, 7, 8, 7, 8, 7, 8, 9, 8, 9, 10, 8, 9, 10, 8, 9, 7, 8, 9, 7, 8, 7)
X = cbind(x) ; n = dim(X)[1] ; p = dim(X)[2]
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
beta_hat_mult = mult_res$beta_hat ; beta_hat_mult
x2 = x^2 ; X_k = cbind(X, x2)
poly_res = mult_reg(X_k, y, alpha = 0.05, coeff = TRUE)
beta_hat_poly = poly_res$beta_hat ; beta_hat_poly
plot(x, y, xlab = "x(단위:억원)", ylab = "y(단위:백만원)", col = "blue", cex = 0.5, pch = 19,
main = "단순회귀모형 vs 다항회귀모형")
abline(coef = beta_hat_mult, lwd = 2, col = "red")
curve(beta_hat_poly[1] + beta_hat_poly[2] * x + beta_hat_poly[3] * x^2 , n = 101, add = TRUE, col = "lightblue", lwd = 2)
beta_hat_poly[2] / (beta_hat_poly[3] * 2)
x1 = c(10, 20, 20, 40, 40, 50, 30, 30, 30, 30)
x2 = c(205, 213.66, 196.34, 213.66, 196.34, 205, 205, 205, 205, 205)
y = c(54.6, 71.7, 59.8, 78.7, 78.9, 91.0, 90.4, 87.5, 91.0, 88.3)
t1 = (x1 - 30)/20 ; t2 = (x2 - 205)/10
t1_sq = t1^2 ; t2_sq = t2^2 ; t1t2 = t1 * t2 ; X_T = cbind(t1, t2, t1_sq, t2_sq, t1t2)
n = dim(X_T)[1] ; p = dim(X_T)[2] ; X_T
poly_res = mult_reg(X_T, y, alpha = 0.05, coeff = TRUE)
beta_hat = poly_res$beta_hat ; beta_hat
A = matrix(c(2*16.50, 6.99, 6.99, 2*17.20), nrow = 2) ; z = c(16.48, 3.38)
x = solve(A) %*% z  # x = solve(A, z) ; x
x
y_hat_star = t(c(1, x[1], x[2], (x[1])^2, (x[2])^2, x[1] * x[2])) %*% beta_hat ; y_hat_star
source("functions/mult_reg.R", echo = TRUE)
x = c(180, 200, 220, 240, 260, 280, 300)
y = c(82.0, 89.2, 94.5, 99.6, 102.5, 103.2, 103.8)
X = cbind(x)
X_p = ortho_poly(X, k = 2, coef = TRUE)
# t(X_p) %*% X_p ; t(X_p) %*% y
beta_hat = solve(t(X_p) %*% X_p) %*% t(X_p) %*% y ; beta_hat
X_ptX_p = t(X_p) %*% X_p ; X_ptX_p
tX_py = t(X_p) %*% y ; tX_py
SS_betahat = t(beta_hat) %*% tX_py ; SS_betahat
SS_beta1_beta0_hat = ASS_calc(X_p, y, index_sol = c(1), index_given = c(0), coef = FALSE)
SS_beta2_beta0_hat = ASS_calc(X_p, y, index_sol = c(2), index_given = c(0), coef = FALSE)
SS_beta1_beta0_hat
SS_beta2_beta0_hat
## X_p 에서 절편항을 제거하고 mult_reg 함수 사용
X_p_ = X_p[, -c(1)]
mult_res = mult_reg(X_p_, y, alpha = 0.05, coef = TRUE)
F0_beta1_hat = SS_beta1_beta0_hat / mult_res$MSE ; F0_beta1_hat
F0_beta2_hat = SS_beta2_beta0_hat / mult_res$MSE ; F0_beta2_hat
F_alpha_1 = qf(0.05, 1, 7, lower.tail = FALSE) ; F_alpha_1
## 삼차항에 대한 검정
X_p = ortho_poly(X, k = 3, coef = TRUE)
SS_beta1_beta0_hat = ASS_calc(X_p, y, index_sol = c(1), index_given = c(0), coef = FALSE)
SS_beta2_beta0_hat = ASS_calc(X_p, y, index_sol = c(2), index_given = c(0), coef = FALSE)
SS_beta3_beta0_hat = ASS_calc(X_p, y, index_sol = c(3), index_given = c(0), coef = FALSE)
SS_beta1_beta0_hat ; SS_beta2_beta0_hat ; SS_beta3_beta0_hat
## X_p 에서 절편항을 제거하고 mult_reg 함수 사용
X_p_ = X_p[, -c(1)]
mult_res = mult_reg(X_p_, y, alpha = 0.05, coef = TRUE)
F0_beta1_hat = SS_beta1_beta0_hat / mult_res$MSE ; F0_beta1_hat
F0_beta2_hat = SS_beta2_beta0_hat / mult_res$MSE ; F0_beta2_hat
F0_beta3_hat = SS_beta3_beta0_hat / mult_res$MSE ; F0_beta3_hat
F_alpha_1 = qf(0.05, 1, 6, lower.tail = FALSE) ; F_alpha_1
mult_res$beta_hat
x = c(0, 1, 2, 3, 4, 5, 6, 7)
y = c(1.0, 1.2, 1.3, 1.5, 1.7, 2.5, 3.4, 4.2)
X = cbind(x) ; n = length(x)
T1_x_4 = c(rep(0, n))
for (i in 1:n){
if (x[i] - 4 <= 0){
T1_x_4[i] = 0
}else if(x[i] - 4 > 0){
T1_x_4[i] = x[i] - 4
}
}
X = cbind(X, T1_x_4)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
X ; beta_hat = mult_res$beta_hat ; beta_hat
R2 = mult_res$SSR / mult_res$SST ; R2
contr.poly(5)
# install.packages("ISLR")
library(ISLR)
data(Wage)
fit1 <- lm(wage ~ age, data = Wage)
fit2 <- lm(wage ~ age + I(age^2), data = Wage)
anova(fit1, fit2)
fit <- lm(wage ~ poly(age,2), data = Wage)
summary(fit)
library(dplyr)
wage.dat <- Wage %>%
select(y = wage, x1 = age) %>%
mutate(x2 = x1^2, x3 = x1^3,
x4 = pmax(0, (x1 - quantile(x1, prob = 0.25))^3),
x5 = pmax(0, (x1 - quantile(x1, prob = 0.50))^3),
x6 = pmax(0, (x1 - quantile(x1, prob = 0.75))^3) )
head(wage.dat)
lm.fit = lm(y ~ ., data = wage.dat)
o = order(wage.dat$x1)
plot(wage.dat$x1, wage.dat$y, col = "grey70", xlab = "Age",
ylab = "Wage", main = "Cubic Splines")
lines(wage.dat$x1[o], lm.fit$fitted.values[o], col = "red", lwd = 2)
abline(v = quantile(wage.dat$x1, prob = c(0.25, 0.5, 0.75)), col = "blue", lty = 3, lwd = 2)
source("functions/mult_reg.R", echo = F)
x = c(6.4,16.1,42.1,2.1,30.7,32.1,7.2,3.4,20.8,1.5)
y = c(1.7,2.7,4.9,0.3,3.9,4.1,1.2,0.5,3.3,0.2)
x2 = x^2 ; X = cbind(x, x2)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
beta_hat = mult_res$beta_hat ; beta_hat
## 축차 F 검정으로 삼차항 추가가 바람직한지 확인하기
x3 = x^3 ; X = cbind(X, x3)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
SS_beta3_beta012 = ASS_calc(X, y, index_sol = c(3), index_given = c(0,1,2), coef = TRUE)
F_0 = SS_beta3_beta012 / MSE ; F_alpha = qf(0.05, 1, 6, lower.tail = FALSE)
F_0 ; F_alpha
x = c(6.4,16.1,42.1,2.1,30.7,32.1,7.2,3.4,20.8,1.5)
y = c(1.7,2.7,4.9,0.3,3.9,4.1,1.2,0.5,3.3,0.2)
x2 = x^2 ; X = cbind(x, x2)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
beta_hat = mult_res$beta_hat ; beta_hat
plot(x, y, xlab = "x", ylab = "y", col = "blue", cex = 0.5, pch = 19,
main = "2차차다항회귀모형")
# abline(coef = beta_hat_mult, lwd = 2, col = "red")
curve(beta_hat[1] + beta_hat[2] * x + beta_hat[3] * x^2 , n = 101, add = TRUE, col = "lightblue", lwd = 2)
t1 = c(190, 190, 210, 210, 200, 185, 215, 200, 200)
t2 = c(75, 85, 75, 85, 80, 80, 80, 72.5, 87.5)
y = c(13.9, 13.1, 12.9, 13.6, 15.7, 11.8, 12.7, 12.0, 12.4)
x1 = (t1 - 200)/10 ; x2 = (t2 - 80)/5 ; X = cbind(x1, x2)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
beta_hat = mult_res$beta_hat ; beta_hat
x1_2 = x1^2 ; x2_2 = x2^2 ; x12 = x1 * x2
X = cbind(X, x1_2, x2_2, x12)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
beta_hat = mult_res$beta_hat ; beta_hat
MSE = mult_res$MSE
SS_beta12_ = ASS_calc(X, y, index_sol = c(5), index_given = c(0,1,2,3,4), coef = TRUE)
F_0 = SS_beta12_ / MSE ; F_alpha = qf(0.05, 1, 3, lower.tail = FALSE)
F_0 ; F_alpha
MSE = mult_res$MSE
XtX_inv = solve(mult_res$XtX) ; XtX_inv * MSE
# x1, x2의 범위 설정 (데이터에 따라 적절한 범위 선택; 여기서는 -1.5 ~ 1.5로 예시)
x1.seq <- seq(-2.5, 2.5, length = 100)
x2.seq <- seq(-2.5, 2.5, length = 100)
# x1, x2의 조합으로 grid 생성
grid <- expand.grid(x1 = x1.seq, x2 = x2.seq)
# 각 grid 점에서의 ŷ 계산
grid$yhat <- with(grid,
beta_hat[1] + beta_hat[2] * x1 + beta_hat[3] * x2 + beta_hat[4] * x1^2 + beta_hat[5] * x2^2 + beta_hat[6] * x1 * x2
)
# ŷ 값을 matrix 형태로 변환 (행: x1, 열: x2)
yhat.mat <- matrix(grid$yhat, nrow = length(x1.seq), ncol = length(x2.seq))
# 등고선 그리기
contour(x1.seq, x2.seq, yhat.mat,
xlab = "x1", ylab = "x2",
main = "yhat 등고선")
x = c(100, 110, 120, 130, 140, 150, 160, 170)
y = c(20, 24, 27, 28, 29, 29, 28, 27)
X = cbind(x)
X_p = ortho_poly(X, k = 2, coef = TRUE)
X_p = X_p[, -c(1)]
mult_res = mult_reg(X_p, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
SS_beta1_02 = ASS_calc(X_p, y, index_sol = c(1), index_given = c(0,2), coef = TRUE)
SS_beta2_01 = ASS_calc(X_p, y, index_sol = c(2), index_given = c(0,1), coef = TRUE)
SS_beta1_02 ; SS_beta2_01
SS_beta1_02/MSE ; SS_beta2_01/MSE
beta_hat = mult_res$beta_hat ; beta_hat
F_alpha_1 = qf(0.05, 1, 5, lower.tail = FALSE) ; F_alpha_1
X_p_3 = ortho_poly(X, k = 3, coef = TRUE)
X_p_3 = X_p_3[, -c(1)]
mult_res = mult_reg(X_p_3, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
SS_beta1_023 = ASS_calc(X_p_3, y, index_sol = c(1), index_given = c(0,2,3), coef = TRUE)
SS_beta2_013 = ASS_calc(X_p_3, y, index_sol = c(2), index_given = c(0,1,3), coef = TRUE)
SS_beta3_012 = ASS_calc(X_p_3, y, index_sol = c(3), index_given = c(0,1,2), coef = TRUE)
SS_beta1_023 ; SS_beta2_013 ; SS_beta3_012
SS_beta1_023/MSE ; SS_beta2_013/MSE ; SS_beta3_012/MSE
beta_hat = mult_res$beta_hat ; beta_hat
F_alpha_1 = qf(0.05, 1, 4, lower.tail = FALSE) ; F_alpha_1
## 4차항도 필요한지 검토
X_p_4 = ortho_poly(X, k = 4, coef = TRUE)
X_p_4 = X_p_4[, -c(1)]
mult_res = mult_reg(X_p_4, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
SS_beta1_0234 = ASS_calc(X_p_4, y, index_sol = c(1), index_given = c(0,2,3,4), coef = TRUE)
SS_beta2_0134 = ASS_calc(X_p_4, y, index_sol = c(2), index_given = c(0,1,3,4), coef = TRUE)
SS_beta3_0124 = ASS_calc(X_p_4, y, index_sol = c(3), index_given = c(0,1,2,4), coef = TRUE)
SS_beta4_0123 = ASS_calc(X_p_4, y, index_sol = c(4), index_given = c(0,1,2,3), coef = TRUE)
SS_beta1_0234 ; SS_beta2_0134 ; SS_beta3_0124 ; SS_beta4_0123
SS_beta1_0234/MSE ; SS_beta2_0134/MSE ; SS_beta3_0124/MSE ; SS_beta4_0123/MSE
beta_hat = mult_res$beta_hat ; beta_hat
F_alpha_1 = qf(0.05, 1, 3, lower.tail = FALSE) ; F_alpha_1
x = c(100, 110, 120, 130, 140, 150, 160, 170)
y = c(20, 24, 27, 28, 29, 29, 28, 27)
X = cbind(x)
X_p = ortho_poly(X, k = 2, coef = TRUE)
X_p = X_p[, -c(1)]
mult_res = mult_reg(X_p, y, alpha = 0.05, coeff = TRUE) ; MSE = mult_res$MSE
beta_hat = mult_res$beta_hat
beta_0 = beta_hat[1] ; beta_1 = beta_hat[2] ; beta_2 = beta_hat[3]
plot(x, y, xlab = "x(비료의 양)", ylab = "y(수확량)", cex = 0.5, pch = 19,
main = "2차 직교다항회귀 모형", col = "red")
curve(beta_hat[1] + beta_hat[2] * ((x-135)/10) + beta_hat[3] * (((x-135)/10)^2 - 63/12) , n = 101, add = TRUE, col = "lightblue", lwd = 3)
solve(mult_res$XtX) * MSE
x = c(1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10)
y = c(0.10, 0.09, 0.15, 0.16, 0.19, 0.19, 0.23, 0.22, 0.23, 0.24,
0.25, 0.25, 0.27, 0.26, 0.28, 0.28, 0.28, 0.29, 0.30, 0.31)
plot(x, y, xlab = "나이", ylab = "y(키와 몸무게의 비kg/cm)", cex = 0.5, pch = 19)
n = length(x)
T1_x_4 = c(rep(1,n))
for (i in 1:n){
if (x[i] - 4 < 0){
T1_x_4[i] = 0
}else{
T1_x_4[i] = x[i] - 4
}
}
X = cbind(x, T1_x_4)
mult_res_2 = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
beta_hat_2 = mult_res_2$beta_hat ; beta_hat_2
SSR = mult_res_2$SSR ; SST = mult_res_2$SST
R2 = SSR/SST ; R2
T2_x_4 = T1_x_4^2
X = cbind(x, T2_x_4)
mult_res_3 = mult_reg(X, y, alpha = 0.05, coeff = TRUE) ; beta_hat_3 = mult_res_3$beta_hat
beta_hat_3 ; R2 = mult_res_3$SSR / mult_res_3$SST ; R2
x2 = x^2 ; X = cbind(x, x2)
mult_res_5 = mult_reg(X, y, alpha = 0.05, coeff = TRUE) ; beta_hat_5 = mult_res_5$beta_hat
beta_hat_5 ; R2 = mult_res_5$SSR/ mult_res_5$SST ; R2
plot(x, y, xlab = "나이", ylab = "y(키와 몸무게의 비kg/cm)", cex = 0.5, pch = 19)
# 접합점 전 구간: x < 4
x_min <- min(x)    # 예: 1
x_knot <- 4
y_min <- beta_hat_2[1] + beta_hat_2[2] * x_min
y_knot <- beta_hat_2[1] + beta_hat_2[2] * x_knot
segments(x_min, y_min, x_knot, y_knot, col = "blue", lwd = 2)
# 접합점 후 구간: x >= 4
x_max <- max(x)    # 예: 10
# x>=4인 구간의 회귀식은 y = beta_hat_2[1] + beta_hat_2[2]*x + beta_hat_2[3]*(x - 4)
y_knot2 <- beta_hat_2[1] + beta_hat_2[2] * x_knot  # x=4에서의 y값 (두 식이 같아야 함)
y_max <- beta_hat_2[1] + beta_hat_2[2] * x_max + beta_hat_2[3] * (x_max - 4)
segments(x_knot, y_knot2, x_max, y_max, col = "blue", lwd = 2)
plot(x, y, xlab = "나이", ylab = "y(키와 몸무게의 비kg/cm)", cex = 0.5, pch = 19)
# 접합점 전 구간: x < 4
x_min <- min(x)    # 예: 1
x_knot <- 4
y_min <- beta_hat_2[1] + beta_hat_2[2] * x_min
y_knot <- beta_hat_2[1] + beta_hat_2[2] * x_knot
segments(x_min, y_min, x_knot, y_knot, col = "blue", lwd = 2)
# 접합점 후 구간: x >= 4
x_max <- max(x)    # 예: 10
# x>=4인 구간의 회귀식은 y = beta_hat_2[1] + beta_hat_2[2]*x + beta_hat_2[3]*(x - 4)
y_knot2 <- beta_hat_2[1] + beta_hat_2[2] * x_knot  # x=4에서의 y값 (두 식이 같아야 함)
y_max <- beta_hat_2[1] + beta_hat_2[2] * x_max + beta_hat_2[3] * (x_max - 4)
segments(x_knot, y_knot2, x_max, y_max, col = "blue", lwd = 2)
# beta_hat_3
#
# beta_hat_5
curve(beta_hat_5[1] + beta_hat_5[2] * x + beta_hat_5[3] * x^2, n = 101, add = TRUE, col = "lightblue", lwd = 2)
plot(x, y, xlab = "나이", ylab = "y(키와 몸무게의 비kg/cm)", cex = 0.5, pch = 19)
# 접합점 전 구간: x < 4
x_min <- min(x)    # 예: 1
x_knot <- 4
y_min <- beta_hat_2[1] + beta_hat_2[2] * x_min
y_knot <- beta_hat_2[1] + beta_hat_2[2] * x_knot
segments(x_min, y_min, x_knot, y_knot, col = "blue", lwd = 2)
# 접합점 후 구간: x >= 4
x_max <- max(x)    # 예: 10
# x>=4인 구간의 회귀식은 y = beta_hat_2[1] + beta_hat_2[2]*x + beta_hat_2[3]*(x - 4)
y_knot2 <- beta_hat_2[1] + beta_hat_2[2] * x_knot  # x=4에서의 y값 (두 식이 같아야 함)
y_max <- beta_hat_2[1] + beta_hat_2[2] * x_max + beta_hat_2[3] * (x_max - 4)
segments(x_knot, y_knot2, x_max, y_max, col = "blue", lwd = 2)
curve(ifelse(x < 4,
beta_hat_3[1] + beta_hat_3[2] * x,
beta_hat_3[1] + beta_hat_3[2] * x + beta_hat_3[3] * (x - 4)^2),
from = min(x), to = max(x), n = 101, add = TRUE, col = "green", lwd = 2)
curve(beta_hat_5[1] + beta_hat_5[2] * x + beta_hat_5[3] * x^2,
from = min(x), to = max(x), n = 101, add = TRUE, col = "lightblue", lwd = 2)
plot(x, y, xlab = "나이", ylab = "y(키와 몸무게의 비kg/cm)", cex = 0.5, pch = 19)
# 접합점 전 구간: x < 4
x_min <- min(x)    # 예: 1
x_knot <- 4
y_min <- beta_hat_2[1] + beta_hat_2[2] * x_min
y_knot <- beta_hat_2[1] + beta_hat_2[2] * x_knot
segments(x_min, y_min, x_knot, y_knot, col = "blue", lwd = 2)
# 접합점 후 구간: x >= 4
x_max <- max(x)    # 예: 10
# x>=4인 구간의 회귀식은 y = beta_hat_2[1] + beta_hat_2[2]*x + beta_hat_2[3]*(x - 4)
y_knot2 <- beta_hat_2[1] + beta_hat_2[2] * x_knot  # x=4에서의 y값 (두 식이 같아야 함)
y_max <- beta_hat_2[1] + beta_hat_2[2] * x_max + beta_hat_2[3] * (x_max - 4)
segments(x_knot, y_knot2, x_max, y_max, col = "blue", lwd = 2)
curve(ifelse(x < 4,
beta_hat_3[1] + beta_hat_3[2] * x,
beta_hat_3[1] + beta_hat_3[2] * x + beta_hat_3[3] * (x - 4)^2),
from = min(x), to = max(x), n = 101, add = TRUE, col = "green", lwd = 2)
curve(beta_hat_5[1] + beta_hat_5[2] * x + beta_hat_5[3] * x^2,
from = min(x), to = max(x), n = 101, add = TRUE, col = "lightblue", lwd = 2)
legend("topright",
legend = c("관측치", "1차-1차 회귀모형", "1차-2차 회귀모형", "2차 회귀모형"),
col = c("black", "blue", "green", "lightblue"),
pch = c(19, NA, NA, NA),
lty = c(NA, 1, 1, 1),
lwd = c(NA, 2, 2, 2),
bty = "n")
plot(x, y, xlab = "나이", ylab = "y(키와 몸무게의 비kg/cm)", cex = 0.5, pch = 19)
# 접합점 전 구간: x < 4
x_min <- min(x)    # 예: 1
x_knot <- 4
y_min <- beta_hat_2[1] + beta_hat_2[2] * x_min
y_knot <- beta_hat_2[1] + beta_hat_2[2] * x_knot
segments(x_min, y_min, x_knot, y_knot, col = "blue", lwd = 2)
# 접합점 후 구간: x >= 4
x_max <- max(x)    # 예: 10
# x>=4인 구간의 회귀식은 y = beta_hat_2[1] + beta_hat_2[2]*x + beta_hat_2[3]*(x - 4)
y_knot2 <- beta_hat_2[1] + beta_hat_2[2] * x_knot  # x=4에서의 y값 (두 식이 같아야 함)
y_max <- beta_hat_2[1] + beta_hat_2[2] * x_max + beta_hat_2[3] * (x_max - 4)
segments(x_knot, y_knot2, x_max, y_max, col = "blue", lwd = 2)
curve(ifelse(x < 4,
beta_hat_3[1] + beta_hat_3[2] * x,
beta_hat_3[1] + beta_hat_3[2] * x + beta_hat_3[3] * (x - 4)^2),
from = min(x), to = max(x), n = 101, add = TRUE, col = "green", lwd = 2)
curve(beta_hat_5[1] + beta_hat_5[2] * x + beta_hat_5[3] * x^2,
from = min(x), to = max(x), n = 101, add = TRUE, col = "lightblue", lwd = 2)
legend("bottomright",
legend = c("관측치", "1차-1차 회귀모형", "1차-2차 회귀모형", "2차 회귀모형"),
col = c("black", "blue", "green", "lightblue"),
pch = c(19, NA, NA, NA),
lty = c(NA, 1, 1, 1),
lwd = c(NA, 2, 2, 2),
bty = "n")
plot(x, y, xlab = "나이", ylab = "y(키와 몸무게의 비kg/cm)",
main = "다항회귀모형", cex = 0.5, pch = 19)
# 접합점 전 구간: x < 4
x_min <- min(x)    # 예: 1
x_knot <- 4
y_min <- beta_hat_2[1] + beta_hat_2[2] * x_min
y_knot <- beta_hat_2[1] + beta_hat_2[2] * x_knot
segments(x_min, y_min, x_knot, y_knot, col = "blue", lwd = 2)
# 접합점 후 구간: x >= 4
x_max <- max(x)    # 예: 10
# x>=4인 구간의 회귀식은 y = beta_hat_2[1] + beta_hat_2[2]*x + beta_hat_2[3]*(x - 4)
y_knot2 <- beta_hat_2[1] + beta_hat_2[2] * x_knot  # x=4에서의 y값 (두 식이 같아야 함)
y_max <- beta_hat_2[1] + beta_hat_2[2] * x_max + beta_hat_2[3] * (x_max - 4)
segments(x_knot, y_knot2, x_max, y_max, col = "blue", lwd = 2)
curve(ifelse(x < 4,
beta_hat_3[1] + beta_hat_3[2] * x,
beta_hat_3[1] + beta_hat_3[2] * x + beta_hat_3[3] * (x - 4)^2),
from = min(x), to = max(x), n = 101, add = TRUE, col = "green", lwd = 2)
curve(beta_hat_5[1] + beta_hat_5[2] * x + beta_hat_5[3] * x^2,
from = min(x), to = max(x), n = 101, add = TRUE, col = "lightblue", lwd = 2)
legend("bottomright",
legend = c("관측치", "1차-1차 회귀모형", "1차-2차 회귀모형", "2차 회귀모형"),
col = c("black", "blue", "green", "lightblue"),
pch = c(19, NA, NA, NA),
lty = c(NA, 1, 1, 1),
lwd = c(NA, 2, 2, 2),
bty = "n")
library(ISLR)
data(Auto)
library(ISLR)
library(dplyr)
data(Auto)
dataset  = Auto %>% na.omit %>% select(horsepower,mpg)
dataset
library(ISLR)
library(dplyr)
data(Auto)
dataset  = Auto %>% na.omit %>% select(horsepower,mpg)
x = dataset$horsepower ; y = dataset$mpg
X = cbind(x);
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
x2 = x^2
X = cbind(x, x2);
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
