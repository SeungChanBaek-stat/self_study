X = cbind(x3) ; n = dim(X)[1] ; p = dim(X)[2]
source("functions/reg_diagnostics.R", echo = T)
source("functions/mult_reg.R", echo = T)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
MSE = mult_res$MSE
outliers(X, y, alpha = 0.05, MSE)
DFFITS_bound = 2 * sqrt((p+1) / n) ; DFFITS_bound
D_i_bound = qf(0.50, p+1, n-p-1, lower.tail = FALSE) ; D_i_bound
COVRAT_ubound = 1 + 3 * ((p+1) / n) ; COVRAT_ubound
COVRAT_lbound = 1 - 3 * ((p+1) / n) ; COVRAT_lbound
FVARAT_ubound = 1 + ((2 * p + 3)/n) ; FVARAT_ubound
FVARAT_lbound = 1 - (3/n) ; FVARAT_lbound
knitr::opts_chunk$set(echo = TRUE)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
x = c(15, 26, 10, 9, 15, 20, 18, 11, 8 ,20, 7, 9, 10, 11, 11, 10, 12, 42, 17, 11, 10)
y = c(95, 71, 83, 91, 102, 87, 93, 100, 104, 94, 113, 96, 83, 84, 102, 100, 105, 57, 121, 86, 100)
X = cbind(x)
mult_res = mult_reg(X, y, coeff = TRUE, alpha = 0.05)
beta_hat = mult_res$beta_hat ; beta_hat
MSE = mult_res$MSE ; MSE ;sqrt(MSE)
outlier_res = outliers(X, y, alpha = 0.05, MSE)
hbar = mean(outlier_res$h_ii) ; hbar
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
x = c(15, 26, 10, 9, 15, 20, 18, 11, 8 ,20, 7, 9, 10, 11, 11, 10, 12, 42, 17, 11, 10)
y = c(95, 71, 83, 91, 102, 87, 93, 100, 104, 94, 113, 96, 83, 84, 102, 100, 105, 57, 121, 86, 100)
X = cbind(x)
mult_res = mult_reg(X, y, coeff = TRUE, alpha = 0.05)
beta_hat = mult_res$beta_hat ; beta_hat
MSE = mult_res$MSE ; MSE ;sqrt(MSE)
outlier_res = outliers(X, y, alpha = 0.05, MSE)
hbar = mean(outlier_res$h_ii) ; hbar
library(dplyr)
library(ISLR)
data(Hitters)
hitter.dat <- Hitters %>% na.omit %>% select(Salary, AtBat, Hits, HmRun)
lm.fit <- lm(Salary ~., hitter.dat)
res <- rstudent(lm.fit) # 스튜던트화 잔차
res [abs(res) > qt(0.975, 258)]
summary(influence.measures(lm.fit))
X <- as.matrix(hitter.dat[, -1])
# 잔차
res <- lm.fit$residuals
# 잔차의 자유도 : n - p - 1
df.res <- lm.fit$df.residual
# MSE의 제곱근
s <- as.vector(sqrt(res %*% res / df.res) )
# 해트행렬
hat.mat <- X %*% solve(t(X) %*% X) %*% t(X)
# 표준화 잔차
standard_res <- res / (s * sqrt(1 - diag(hat.mat)))
# 스튜던트화 잔차
student_res <- standard_res * sqrt((df.res - 1) / (df.res - standard_res^2))
# 이상점
outlier <- rownames(hitter.dat)[(abs(student_res) > qt(0.975, df = df.res - 1)) == TRUE]
outlier
yhat_outlier = lm.fit$fitted.values[outlier]
student_res_outlier = student_res[outlier]
par(mfrow = c(1,2))
plot(lm.fit$fitted.values, standard_res, xlab = expression(hat(y)),
ylab = "Standardized Residual")
abline(h = c(-2, 2), col = "blue", lty = "dotted")
plot(lm.fit$fitted.values, student_res, xlab = expression(hat(y)),
ylab = "Studentized Residual")
abline(h = qt(c(0.025, 0.975), df = df.res - 1), col = "blue", lty = "dotted")
points(yhat_outlier, student_res_outlier, col = "red")
text(x = yhat_outlier, y = student_res_outlier, labels = outlier,
pos = 4, cex = 0.5, col = "red")
D = diag(hat.mat) * standard_res^2 / 4 * (1 - diag(hat.mat))
influence_obs <- hitter.dat$index[D > qf(0.5, 4, df.res)]
influence_obs
x1 = c(28, 47, 39, 25, 34, 29, 38, 23, 52, 37, 35, 39, 38, 32, 25)
x2 = c(146, 169, 160, 156, 161, 168, 154, 153, 160, 152, 155, 154, 157, 162, 142)
x3 = c(34, 57, 38, 28, 37, 50, 54, 40, 62, 39, 46, 54, 57, 53, 32)
y = c(22, 36, 24, 22, 27, 29, 26, 23, 31, 25, 23, 27, 31, 25, 23)
X = cbind(x1, x2, x3) ; n = dim(X)[1] ; p = dim(X)[2]
X = cbind(x3) ; n = dim(X)[1] ; p = dim(X)[2]
source("functions/reg_diagnostics.R", echo = T)
source("functions/mult_reg.R", echo = T)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
MSE = mult_res$MSE
outliers(X, y, alpha = 0.05, MSE)
DFFITS_bound = 2 * sqrt((p+1) / n) ; DFFITS_bound
D_i_bound = qf(0.50, p+1, n-p-1, lower.tail = FALSE) ; D_i_bound
COVRAT_ubound = 1 + 3 * ((p+1) / n) ; COVRAT_ubound
COVRAT_lbound = 1 - 3 * ((p+1) / n) ; COVRAT_lbound
FVARAT_ubound = 1 + ((2 * p + 3)/n) ; FVARAT_ubound
FVARAT_lbound = 1 - (3/n) ; FVARAT_lbound
X = cbind(x1, x2, x3) ; n = dim(X)[1] ; p = dim(X)[2]
source("functions/reg_diagnostics.R", echo = T)
source("functions/mult_reg.R", echo = T)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
MSE = mult_res$MSE
outliers(X, y, alpha = 0.05, MSE)
DFFITS_bound = 2 * sqrt((p+1) / n) ; DFFITS_bound
D_i_bound = qf(0.50, p+1, n-p-1, lower.tail = FALSE) ; D_i_bound
COVRAT_ubound = 1 + 3 * ((p+1) / n) ; COVRAT_ubound
COVRAT_lbound = 1 - 3 * ((p+1) / n) ; COVRAT_lbound
FVARAT_ubound = 1 + ((2 * p + 3)/n) ; FVARAT_ubound
FVARAT_lbound = 1 - (3/n) ; FVARAT_lbound
x1 = c(4, 8, 9, 8, 8, 12, 6, 10, 6, 9)
x2 = c(4, 10, 8, 5, 10, 15, 8, 13, 5, 12)
y = c(9, 20, 22, 15, 17, 30, 18, 25, 10, 20)
X = cbind(x1) ; n = dim(X)[1] ; p = dim(X)[2]
source("functions/reg_diagnostics.R", echo = T)
source("functions/mult_reg.R", echo = T)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
MSE = mult_res$MSE
outliers(X, y, alpha = 0.05, MSE)
DFFITS_bound = 2 * sqrt((p+1) / n) ; DFFITS_bound
D_i_bound = qf(0.50, p+1, n-p-1, lower.tail = FALSE) ; D_i_bound
COVRAT_ubound = 1 + 3 * ((p+1) / n) ; COVRAT_ubound
COVRAT_lbound = 1 - 3 * ((p+1) / n) ; COVRAT_lbound
FVARAT_ubound = 1 + ((2 * p + 3)/n) ; FVARAT_ubound
FVARAT_lbound = 1 - (3/n) ; FVARAT_lbound
X = cbind(x1, x2) ; n = dim(X)[1] ; p = dim(X)[2]
source("functions/reg_diagnostics.R", echo = T)
source("functions/mult_reg.R", echo = T)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
MSE = mult_res$MSE
outliers(X, y, alpha = 0.05, MSE)
DFFITS_bound = 2 * sqrt((p+1) / n) ; DFFITS_bound
D_i_bound = qf(0.50, p+1, n-p-1, lower.tail = FALSE) ; D_i_bound
COVRAT_ubound = 1 + 3 * ((p+1) / n) ; COVRAT_ubound
COVRAT_lbound = 1 - 3 * ((p+1) / n) ; COVRAT_lbound
FVARAT_ubound = 1 + ((2 * p + 3)/n) ; FVARAT_ubound
FVARAT_lbound = 1 - (3/n) ; FVARAT_lbound
x = c(6.4,16.1,42.1,2.1,30.7,32.1,7.2,3.4,20.8,1.5)
y = c(1.7,2.7,4.9,0.3,3.9,4.1,1.2,0.5,3.3,0.2)
X = cbind(x1) ; n = dim(X)[1] ; p = dim(X)[2]
source("functions/reg_diagnostics.R", echo = T)
source("functions/mult_reg.R", echo = T)
mult_res = mult_reg(X, y, alpha = 0.05, coeff = TRUE)
MSE = mult_res$MSE
outliers(X, y, alpha = 0.05, MSE)
DFFITS_bound = 2 * sqrt((p+1) / n) ; DFFITS_bound
D_i_bound = qf(0.50, p+1, n-p-1, lower.tail = FALSE) ; D_i_bound
COVRAT_ubound = 1 + 3 * ((p+1) / n) ; COVRAT_ubound
COVRAT_lbound = 1 - 3 * ((p+1) / n) ; COVRAT_lbound
FVARAT_ubound = 1 + ((2 * p + 3)/n) ; FVARAT_ubound
FVARAT_lbound = 1 - (3/n) ; FVARAT_lbound
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
n = dim(X)[1] ; p = dim(X)[2]
one = c(rep(1, n))
colname_vec = colnames(X)
print(colname_vec)
library(sets)
install.packages("sets")
library(sets)
# install.packages("sets")
a <- c("test1","test2","test3")
b <- set_power(a)
# install.packages("sets")
a <- c("test1","test2","test3")
b <- set_power(a)
b
B <- Vectorize(b)
class(b)
f <- function(set) {
n <- length(set)
masks <- 2^(1:n-1)
lapply( 1:2^n-1, function(u) set[ bitwAnd(u, masks) != 0 ] )
}
f(LETTERS[1:4])
f <- function(set) {
n <- length(set)
masks <- 2^(1:n-1)
lapply( 1:2^n-1, function(u) set[ bitwAnd(u, masks) != 0 ] )
}
test = LETTERS[1:4]
f(test)
f <- function(set) {
n <- length(set)
masks <- 2^(1:n-1)
res = lapply( 1:2^n-1, function(u) set[ bitwAnd(u, masks) != 0 ] )
return(res)
}
test = LETTERS[1:4]
test_res = f(test)
test_res
class(test_res[[1]])
class(test_res[[2]])
colname_vec_res = f(colname_vec)
class(colname_vec_res[[2]])
colname_vec_res[[2]]
colname_vec_res[[4]]
total_subsets <- function(set) {
n <- length(set)
masks <- 2^(1:n-1)
res = sapply( 1:2^n-1, function(u) set[ bitwAnd(u, masks) != 0 ] )
return(res)
}
test = LETTERS[1:4]
test_res = f(test)
class(test_res[[2]])
test_res
total_subsets <- function(set) {
n <- length(set)
masks <- 2^(1:n-1)
res = sapply( 1:2^n-1, function(u) set[ bitwAnd(u, masks) != 0 ] )
return(res)
}
test = LETTERS[1:4]
test_res = total_subsets(test)
class(test_res[[2]])
test_res
colname_vec_res = total_subsets(colname_vec)
class(colname_vec_res[[2]])
colname_vec_res[[4]]
class(colname_vec_res)
length(colname_vec_res)
colname_vec_res
total_subsets <- function(set) {
n <- length(set)
masks <- 2^(1:n-1)
res = sapply( 1:2^n-1, function(u) set[ bitwAnd(u, masks) != 0 ] )
return(res)
}
test = LETTERS[1:4]
test_res = total_subsets(test)
class(test_res[[2]])
colname_vec_res = total_subsets(colname_vec)
lapply(colname_vec_res,sort,decreasing=FALSE)
colname_vec_res
total_subsets <- function(set) {
n <- length(set)
masks <- 2^(1:n-1)
res = sapply( 1:2^n-1, function(u) set[ bitwAnd(u, masks) != 0 ] )
return(res)
}
colname_vec_res = total_subsets(colname_vec)
colname_vec_res
lapply(colname_vec_res,sort,decreasing=FALSE)
knitr::opts_chunk$set(echo = TRUE)
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
# x = c(15, 26, 10, 9, 15, 20, 18, 11, 8 ,20, 7, 9, 10, 11, 11, 10, 12, 42, 17, 11, 10)
# y = c(95, 71, 83, 91, 102, 87, 93, 100, 104, 94, 113, 96, 83, 84, 102, 100, 105, 57, 121, 86, 100)
# X = cbind(x)
#
# mult_res = mult_reg(X, y, coeff = TRUE, alpha = 0.05)
# beta_hat = mult_res$beta_hat ; beta_hat
# MSE = mult_res$MSE ; MSE ;sqrt(MSE)
#
# outlier_res = outliers(X, y, alpha = 0.05, MSE)
#
# hbar = mean(outlier_res$h_ii) ; hbar
res = best_subset(X, y)
res
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
res = best_subset(X, y)
res
# x = c(15, 26, 10, 9, 15, 20, 18, 11, 8 ,20, 7, 9, 10, 11, 11, 10, 12, 42, 17, 11, 10)
# y = c(95, 71, 83, 91, 102, 87, 93, 100, 104, 94, 113, 96, 83, 84, 102, 100, 105, 57, 121, 86, 100)
# X = cbind(x)
#
# mult_res = mult_reg(X, y, coeff = TRUE, alpha = 0.05)
# beta_hat = mult_res$beta_hat ; beta_hat
# MSE = mult_res$MSE ; MSE ;sqrt(MSE)
#
# outlier_res = outliers(X, y, alpha = 0.05, MSE)
#
# hbar = mean(outlier_res$h_ii) ; hbar
X$x1
X$"x1"
X
colnames(X)
X[,"x1"]
res
X[,"x2"]
X[, res[[3]]]
X[, res[[9]]]
res[[1]]
X[, res[[1]]]
one = c(rep(1, length(x1)))
X_temp = cbind(one, X[, res[[1]]])
X_temp
res[[1]]
length(res[[1]])
length(res[[2]])
length(res[[11]])
length(res[[12]])
length(res[[15]])
length(res[[16]])
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
res = best_subset(X, y)
test_vec = c("x1", "x3", "x4")
print(glue("{test_vec}"))
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
res = best_subset(X, y)
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
res = best_subset(X, y)
res$SSE_vec
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
res = best_subset(X, y)
res$SSE_vec
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
res = best_subset(X, y)
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
res = best_subset(X, y)
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
res = best_subset(X, y)
res$SSE_vec
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
res = best_subset(X, y)
res$MSE_vec
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
res = best_subset(X, y)
res$MSE_vec
source("functions/mult_reg.R", echo = TRUE)
source("functions/reg_diagnostics.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
res = best_subset(X, y)
res$MSE_vec
library(ISLR)
data(Hitters)
Hitters
Hitters_data = na.omit(Hitters_data)
Hitters_data = na.omit(Hitters)
Hitters_data
View(Hitters_data)
library(dplyr)
source("functions/var_selsection.R", echo = TRUE)
source("functions/var_selection.R", echo = TRUE)
colnames(Hitters)
library(ISLR)
library(dplyr)
source("functions/var_selection.R", echo = TRUE)
data(Hitters)
colnames(Hitters)
hit.dat <- Hitters %>% na.omit %>% select(Salary, AtBat, Hits, HmRun, Runs, RBI, Walks, Years, CAtBat, CHits, CHmRun, CRuns, CRBI, CWalks)
X = hit.dat[, -Salary]
X = hit.dat[, -c(1)]
colnames(X)
X = hit.dat[, -c(1)] ; y = hit.dat[, c(1)]
colnames(X) ; colnames(y)
y
library(ISLR)
library(dplyr)
source("functions/var_selection.R", echo = TRUE)
data(Hitters)
colnames(Hitters)
hit.dat <- Hitters %>% na.omit %>% select(Salary, AtBat, Hits, HmRun, Runs, RBI, Walks, Years, CAtBat, CHits, CHmRun, CRuns, CRBI, CWalks)
X = hit.dat[, -c(1)] ; y = hit.dat[, c(1)]
res_hit = best_subset(X, y)
class(y)
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
class(y)
y
X = hit.dat[, -c(1)] ; y = hit.dat[, c(1)]
y
class(X)
class(X[,1])
class(X[,2])
p = dim(X)[2]
for (i in 1:p){
cat(i,"번째 열의 클래스 : ",  class(X[,i]))
}
x1 = c(7, 1, 11, 11, 7, 11, 3, 1, 2, 21, 1, 11, 10)
x2 = c(26, 29, 56, 31, 52, 55, 71, 31, 54, 47, 40, 66, 68)
x3 = c(6, 15, 8, 8, 6, 9, 17, 22, 18, 4, 23, 9, 8)
x4 = c(60, 52, 20, 47, 33, 22, 6, 44, 22, 26, 34, 12, 12)
y = c(78.5, 74.3, 104.3, 87.6, 95.9, 109.2, 102.7, 72.5, 93.1, 115.9, 83.8, 113.3, 109.4)
X = cbind(x1, x2, x3, x4)
class(y)
class(X)
library(ISLR)
library(dplyr)
source("functions/var_selection.R", echo = TRUE)
data(Hitters)
colnames(Hitters)
hit.dat <- Hitters %>% na.omit %>% select(Salary, AtBat, Hits, HmRun, Runs, RBI, Walks, Years, CAtBat, CHits, CHmRun, CRuns, CRBI, CWalks)
X = hit.dat[, -c(1)] ; y = hit.dat[, c(1)]
print(class(X))
print(class(y))
library(ISLR)
library(dplyr)
source("functions/var_selection.R", echo = TRUE)
data(Hitters)
colnames(Hitters)
hit.dat <- Hitters %>% na.omit %>% select(Salary, AtBat, Hits, HmRun, Runs, RBI, Walks, Years, CAtBat, CHits, CHmRun, CRuns, CRBI, CWalks)
X = hit.dat[, -c(1)] ; y = hit.dat[, c(1)]
# print(class(X))
# print(class(y))
# p = dim(X)[2]
#
# for (i in 1:p){
#   cat(i,"번째 열의 클래스 : ",  class(X[,i]))
# }
# class(X[,2])
res_hit = best_subset(X, y)
colnames(Hitters)
library(ISLR)
library(dplyr)
source("functions/var_selection.R", echo = TRUE)
data(Hitters)
colnames(Hitters)
hit.dat <- Hitters %>% na.omit %>% select(Salary, AtBat, Hits, HmRun, Runs, RBI, Walks, Years, CAtBat,
CHits, CHmRun, CRuns, CRBI, CWalks, PutOuts, Assists, Errors)
X = hit.dat[, -c(1)] ; y = hit.dat[, c(1)]
# print(class(X))
# print(class(y))
# p = dim(X)[2]
#
# for (i in 1:p){
#   cat(i,"번째 열의 클래스 : ",  class(X[,i]))
# }
# class(X[,2])
res_hit = best_subset(X, y)
