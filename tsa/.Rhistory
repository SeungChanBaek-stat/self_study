ts.plot(ex7_5c, ylab = "ex7_5c", main = "모의실험 자료")
acf(ex7_5c, lag.max = 24, main = "ex7_5c의 SACF")
pacf(ex7_5c, lag.max = 12, main = "ex7_5c의 SPACF")
adfTest(ex7_5c, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5c, lags = 1, type = "ct")
adfTest(ex7_5c, lags = 2, type = "ct")
diff_c_1 = diff(ex7_5c, lag = 1)
ts.plot(diff_c_1, ylab = "diff_c_1", main = "1차 차분된 모의실험 자료")
acf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SACF")
pacf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SPACF")
fit1 = arima(ex7_5c, order = c(0,1,1)) # 차분된 MA(1) 모형 적합
coeftest(fit1)
sum(fit2$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5c, 0,1,1) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5c, 6, 0, 1, 1) # 예측값의 시계열 그림
sarima.for(ex7_5c, 12, 0, 1, 1) # 예측값의 시계열 그림
dl_b = durbin_levinson(ex7_5c, K = 10)
sacf = dl_c$SACF ; spacf = dl_c$SPACF
sacf
spacf
z_bar = mean(ex7_5c) ; z_sd = sd(ex7_5c)
ex8_1(sacf = sacf, spacf = spacf, n = n, z_bar = z_bar, z_sd = z_sd, diff = TRUE)
library(glue)
z = scan(glue(dataset_dir, "/ex7_5c.txt"))
length(z)
ex7_5c = ts(z)
ts.plot(ex7_5c, ylab = "ex7_5c", main = "모의실험 자료")
acf(ex7_5c, lag.max = 24, main = "ex7_5c의 SACF")
pacf(ex7_5c, lag.max = 12, main = "ex7_5c의 SPACF")
adfTest(ex7_5c, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5c, lags = 1, type = "ct")
adfTest(ex7_5c, lags = 2, type = "ct")
diff_c_1 = diff(ex7_5c, lag = 1)
ts.plot(diff_c_1, ylab = "diff_c_1", main = "1차 차분된 모의실험 자료")
acf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SACF")
pacf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SPACF")
fit1 = arima(ex7_5c, order = c(0,1,1)) # 차분된 MA(1) 모형 적합
coeftest(fit1)
sum(fit2$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5c, 0,1,1) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5c, 6, 0, 1, 1) # 예측값의 시계열 그림
sarima.for(ex7_5c, 12, 0, 1, 1) # 예측값의 시계열 그림
dl_b = durbin_levinson(diff_c_1, K = 10)
sacf = dl_c$SACF ; spacf = dl_c$SPACF
sacf
spacf
z_bar = mean(ex7_5c) ; z_sd = sd(ex7_5c)
ex8_1(sacf = sacf, spacf = spacf, n = n, z_bar = z_bar, z_sd = z_sd, diff = TRUE)
acf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SACF")
pacf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SPACF")
acf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SACF")
dl_b = durbin_levinson(diff_c_1, K = 10)
pacf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SPACF")
library(glue)
z = scan(glue(dataset_dir, "/ex7_5c.txt"))
length(z)
ex7_5c = ts(z)
ts.plot(ex7_5c, ylab = "ex7_5c", main = "모의실험 자료")
acf(ex7_5c, lag.max = 24, main = "ex7_5c의 SACF")
pacf(ex7_5c, lag.max = 12, main = "ex7_5c의 SPACF")
adfTest(ex7_5c, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5c, lags = 1, type = "ct")
adfTest(ex7_5c, lags = 2, type = "ct")
diff_c_1 = diff(ex7_5c, lag = 1)
ts.plot(diff_c_1, ylab = "diff_c_1", main = "1차 차분된 모의실험 자료")
acf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SACF")
pacf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SPACF")
fit1 = arima(ex7_5c, order = c(0,1,1)) # 차분된 MA(1) 모형 적합
coeftest(fit1)
sum(fit2$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5c, 0,1,1) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5c, 6, 0, 1, 1) # 예측값의 시계열 그림
sarima.for(ex7_5c, 12, 0, 1, 1) # 예측값의 시계열 그림
dl_c = durbin_levinson(diff_c_1, K = 10)
sacf = dl_c$SACF ; spacf = dl_c$SPACF
z_bar = mean(ex7_5c) ; z_sd = sd(ex7_5c)
ex8_1(sacf = sacf, spacf = spacf, n = n, z_bar = z_bar, z_sd = z_sd, diff = TRUE)
fit2 = arima(ex7_5c, order = c(0,1,1), include.mean = TRUE) # 차분된 MA(1) 모형 적합
coeftest(fit2)
fit2 = arima(ex7_5c, order = c(0,1,1), include.mean = TRUE) # 차분된 MA(1) 모형 적합
coeftest(fit2)
library(glue)
z = scan(glue(dataset_dir, "/ex7_5c.txt"))
length(z)
ex7_5c = ts(z)
ts.plot(ex7_5c, ylab = "ex7_5c", main = "모의실험 자료")
acf(ex7_5c, lag.max = 24, main = "ex7_5c의 SACF")
pacf(ex7_5c, lag.max = 12, main = "ex7_5c의 SPACF")
adfTest(ex7_5c, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5c, lags = 1, type = "ct")
adfTest(ex7_5c, lags = 2, type = "ct")
diff_c_1 = diff(ex7_5c, lag = 1)
ts.plot(diff_c_1, ylab = "diff_c_1", main = "1차 차분된 모의실험 자료")
acf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SACF")
pacf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SPACF")
fit1 = arima(ex7_5c, order = c(0,1,1)) # 차분된 MA(1) 모형 적합
coeftest(fit1)
sum(fit2$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5c, 0,1,1) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5c, 6, 0, 1, 1) # 예측값의 시계열 그림
sarima.for(ex7_5c, 12, 0, 1, 1) # 예측값의 시계열 그림
dl_c = durbin_levinson(diff_c_1, K = 10)
sacf = dl_c$SACF ; spacf = dl_c$SPACF
z_bar = mean(ex7_5c) ; z_sd = sd(ex7_5c)
ex8_1(sacf = sacf, spacf = spacf, n = n, z_bar = z_bar, z_sd = z_sd, diff = TRUE)
fit2 = arima(ex7_5c, order = c(0,1,1), xreg  = X1) # 차분된 MA(1) 모형 적합
coeftest(fit2)
?arima
x0 <- rep(1, n)
fit2 = arima(ex7_5c, order = c(0,1,1), xreg = x0) # 차분된 MA(1) 모형 적합
coeftest(fit2)
library(glue)
z = scan(glue(dataset_dir, "/ex7_5c.txt"))
n = length(z)
ex7_5c = ts(z)
ts.plot(ex7_5c, ylab = "ex7_5c", main = "모의실험 자료")
acf(ex7_5c, lag.max = 24, main = "ex7_5c의 SACF")
pacf(ex7_5c, lag.max = 12, main = "ex7_5c의 SPACF")
adfTest(ex7_5c, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5c, lags = 1, type = "ct")
adfTest(ex7_5c, lags = 2, type = "ct")
diff_c_1 = diff(ex7_5c, lag = 1)
ts.plot(diff_c_1, ylab = "diff_c_1", main = "1차 차분된 모의실험 자료")
acf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SACF")
pacf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SPACF")
fit1 = arima(ex7_5c, order = c(0,1,1)) # 차분된 MA(1) 모형 적합
coeftest(fit1)
sum(fit2$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5c, 0,1,1) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5c, 6, 0, 1, 1) # 예측값의 시계열 그림
sarima.for(ex7_5c, 12, 0, 1, 1) # 예측값의 시계열 그림
dl_c = durbin_levinson(diff_c_1, K = 10)
sacf = dl_c$SACF ; spacf = dl_c$SPACF
z_bar = mean(ex7_5c) ; z_sd = sd(ex7_5c)
ex8_1(sacf = sacf, spacf = spacf, n = n, z_bar = z_bar, z_sd = z_sd, diff = TRUE)
x0 <- rep(1, n)
fit2 = arima(ex7_5c, order = c(0,1,1), xreg = x0) # 차분된 MA(1) 모형 적합
coeftest(fit2)
n = length(z) ; n
length(x0)
x0 <- rep(1, n)
length(x0)
fit2 = arima(ex7_5c, order = c(0,1,1), xreg = x0) # 차분된 MA(1) 모형 적합
coeftest(fit2)
library(forecast)
fit2 <- Arima(ex7_5c, order = c(0,1,1), include.constant = TRUE)
coeftest(fit2)
library(glue)
z = scan(glue(dataset_dir, "/ex7_5c.txt"))
n = length(z) ; n
ex7_5c = ts(z)
ts.plot(ex7_5c, ylab = "ex7_5c", main = "모의실험 자료")
acf(ex7_5c, lag.max = 24, main = "ex7_5c의 SACF")
pacf(ex7_5c, lag.max = 12, main = "ex7_5c의 SPACF")
adfTest(ex7_5c, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5c, lags = 1, type = "ct")
adfTest(ex7_5c, lags = 2, type = "ct")
diff_c_1 = diff(ex7_5c, lag = 1)
ts.plot(diff_c_1, ylab = "diff_c_1", main = "1차 차분된 모의실험 자료")
acf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SACF")
pacf(diff_c_1, lag.max = 24, main = "1차 차분된 ex7_5c의 SPACF")
fit1 = arima(ex7_5c, order = c(0,1,1)) # 차분된 MA(1) 모형 적합
coeftest(fit1)
sum(fit2$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5c, 0,1,1) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5c, 6, 0, 1, 1) # 예측값의 시계열 그림
sarima.for(ex7_5c, 12, 0, 1, 1) # 예측값의 시계열 그림
dl_c = durbin_levinson(diff_c_1, K = 10)
sacf = dl_c$SACF ; spacf = dl_c$SPACF
z_bar = mean(ex7_5c) ; z_sd = sd(ex7_5c)
ex8_1(sacf = sacf, spacf = spacf, n = n, z_bar = z_bar, z_sd = z_sd, diff = TRUE)
library(glue)
z = scan(glue(dataset_dir, "/ex7_5d.txt"))
length(z)
ex7_5d = ts(z)
ts.plot(ex7_5d, ylab = "ex7_5d", main = "모의실험 자료")
acf(ex7_5d, lag.max = 24, main = "ex7_5d의 SACF")
pacf(ex7_5d, lag.max = 12, main = "ex7_5d의 SPACF")
diff_d_1 = diff(ex7_5d, lag = 1)
ts.plot(diff_d_1, ylab = "diff_d_1", main = "1차 차분된 모의실험 자료")
acf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SACF")
pacf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SPACF")
adfTest(ex7_5c, lags = 0, type = "c") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5c, lags = 1, type = "c")
adfTest(ex7_5c, lags = 2, type = "c")
adfTest(ex7_5b, lags = 0, type = "c") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5b, lags = 1, type = "c")
adfTest(ex7_5b, lags = 2, type = "c")
adfTest(ex7_5d, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5d, lags = 1, type = "ct")
adfTest(ex7_5d, lags = 2, type = "ct")
library(glue)
z = scan(glue(dataset_dir, "/ex7_5d.txt"))
n = length(z)
ex7_5d = ts(z)
ts.plot(ex7_5d, ylab = "ex7_5d", main = "모의실험 자료")
acf(ex7_5d, lag.max = 24, main = "ex7_5d의 SACF")
pacf(ex7_5d, lag.max = 12, main = "ex7_5d의 SPACF")
adfTest(ex7_5d, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5d, lags = 1, type = "ct")
adfTest(ex7_5d, lags = 2, type = "ct")
diff_d_1 = diff(ex7_5d, lag = 1)
ts.plot(diff_d_1, ylab = "diff_d_1", main = "1차 차분된 모의실험 자료")
acf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SACF")
pacf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SPACF")
library(glue)
z = scan(glue(dataset_dir, "/ex7_5d.txt"))
n = length(z)
ex7_5d = ts(z)
ts.plot(ex7_5d, ylab = "ex7_5d", main = "모의실험 자료")
acf(ex7_5d, lag.max = 24, main = "ex7_5d의 SACF")
pacf(ex7_5d, lag.max = 12, main = "ex7_5d의 SPACF")
adfTest(ex7_5d, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5d, lags = 1, type = "ct")
adfTest(ex7_5d, lags = 2, type = "ct")
diff_d_1 = diff(ex7_5d, lag = 1)
ts.plot(diff_d_1, ylab = "diff_d_1", main = "1차 차분된 모의실험 자료")
acf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SACF")
pacf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SPACF")
diff_d_2 = diff(diff_d_1, lag = 1)
ts.plot(diff_d_2, ylab = "diff_d_2", main = "2차 차분된 모의실험 자료")
acf(diff_d_2, lag.max = 24, main = "2차 차분된 ex7_5d의 SACF")
pacf(diff_d_2, lag.max = 24, main = "2차 차분된 ex7_5d의 SPACF")
library(glue)
z = scan(glue(dataset_dir, "/ex7_5d.txt"))
n = length(z)
ex7_5d = ts(z)
ts.plot(ex7_5d, ylab = "ex7_5d", main = "모의실험 자료")
acf(ex7_5d, lag.max = 24, main = "ex7_5d의 SACF")
pacf(ex7_5d, lag.max = 12, main = "ex7_5d의 SPACF")
adfTest(ex7_5d, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5d, lags = 1, type = "ct")
adfTest(ex7_5d, lags = 2, type = "ct")
diff_d_1 = diff(ex7_5d, lag = 1)
ts.plot(diff_d_1, ylab = "diff_d_1", main = "1차 차분된 모의실험 자료")
acf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SACF")
pacf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SPACF")
library(glue)
z = scan(glue(dataset_dir, "/ex7_5d.txt"))
n = length(z)
ex7_5d = ts(z)
ts.plot(ex7_5d, ylab = "ex7_5d", main = "모의실험 자료")
acf(ex7_5d, lag.max = 24, main = "ex7_5d의 SACF")
pacf(ex7_5d, lag.max = 12, main = "ex7_5d의 SPACF")
adfTest(ex7_5d, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5d, lags = 1, type = "ct")
adfTest(ex7_5d, lags = 2, type = "ct")
diff_d_1 = diff(ex7_5d, lag = 1)
ts.plot(diff_d_1, ylab = "diff_d_1", main = "1차 차분된 모의실험 자료")
acf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SACF")
pacf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SPACF")
fit1 = arima(ex7_5d, order = c(2,1,2)) # 차분된 MA(1) 모형 적합
coeftest(fit1)
sum(fit2$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5d, 2,1,2) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5d, 6, 2, 1, 2) # 예측값의 시계열 그림
sarima.for(ex7_5d, 12, 2, 1, 2) # 예측값의 시계열 그림
library(glue)
z = scan(glue(dataset_dir, "/ex7_5d.txt"))
n = length(z)
ex7_5d = ts(z)
ts.plot(ex7_5d, ylab = "ex7_5d", main = "모의실험 자료")
acf(ex7_5d, lag.max = 24, main = "ex7_5d의 SACF")
pacf(ex7_5d, lag.max = 12, main = "ex7_5d의 SPACF")
adfTest(ex7_5d, lags = 0, type = "ct") # ct : case3 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5d, lags = 1, type = "ct")
adfTest(ex7_5d, lags = 2, type = "ct")
diff_d_1 = diff(ex7_5d, lag = 1)
ts.plot(diff_d_1, ylab = "diff_d_1", main = "1차 차분된 모의실험 자료")
acf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SACF")
pacf(diff_d_1, lag.max = 24, main = "1차 차분된 ex7_5d의 SPACF")
fit1 = arima(ex7_5d, order = c(2,1,0)) # 차분된 MA(1) 모형 적합
coeftest(fit1)
sum(fit2$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5d, 2,1,0) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5d, 6, 2, 1, 0) # 예측값의 시계열 그림
sarima.for(ex7_5d, 12, 2, 1, 0) # 예측값의 시계열 그림
fit1 = arima(ex7_5d, order = c(2,1,0)) # 차분된 AR(2) 모형 적합
coeftest(fit1)
sum(fit1$residuals^2)/n
fit2 = arima(ex7_5d, order = c(0,1,2)) # 차분된 MA(2) 모형 적합
coeftest(fit2)
sum(fit2$residuals^2)/n
library(glue)
z = scan(glue(dataset_dir, "/ex7_5e.txt"))
length(z)
ex7_5e = ts(z)
ts.plot(ex7_5e, ylab = "ex7_5e", main = "모의실험 자료")
acf(ex7_5e, lag.max = 24, main = "ex7_5e의 SACF")
pacf(ex7_5e, lag.max = 12, main = "ex7_5e의 SPACF")
diff_e_1 = diff(ex7_5e, lag = 1)
ts.plot(diff_e_1, ylab = "diff_e_1", main = "1차 차분된 모의실험 자료")
acf(diff_e_1, lag.max = 24, main = "1차 차분된 ex7_5e의 SACF")
pacf(diff_e_1, lag.max = 24, main = "1차 차분된 ex7_5e의 SPACF")
adfTest(ex7_5e, lags = 0, type = "c") # c : case2 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5e, lags = 1, type = "c")
adfTest(ex7_5e, lags = 2, type = "c")
library(glue)
z = scan(glue(dataset_dir, "/ex7_5e.txt"))
length(z)
ex7_5e = ts(z)
ts.plot(ex7_5e, ylab = "ex7_5e", main = "모의실험 자료")
acf(ex7_5e, lag.max = 24, main = "ex7_5e의 SACF")
pacf(ex7_5e, lag.max = 12, main = "ex7_5e의 SPACF")
adfTest(ex7_5e, lags = 0, type = "c") # c : case2 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5e, lags = 1, type = "c")
adfTest(ex7_5e, lags = 2, type = "c")
library(glue)
z = scan(glue(dataset_dir, "/ex7_5e.txt"))
length(z)
ex7_5e = ts(z)
ts.plot(ex7_5e, ylab = "ex7_5e", main = "모의실험 자료")
acf(ex7_5e, lag.max = 24, main = "ex7_5e의 SACF")
pacf(ex7_5e, lag.max = 12, main = "ex7_5e의 SPACF")
adfTest(ex7_5e, lags = 0, type = "c") # c : case2 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5e, lags = 1, type = "c")
adfTest(ex7_5e, lags = 2, type = "c")
fit1 = arima(ex7_5d, order = c(1,0,0)) # AR(1) 모형 적합
coeftest(fit1)
sum(fit1$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5e, 1,0,0) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5e, 6, 1, 0, 0) # 예측값의 시계열 그림
sarima.for(ex7_5e, 12, 1, 0, 0) # 예측값의 시계열 그림
library(glue)
z = scan(glue(dataset_dir, "/ex7_5e.txt"))
length(z)
ex7_5e = ts(z)
ts.plot(ex7_5e, ylab = "ex7_5e", main = "모의실험 자료")
acf(ex7_5e, lag.max = 24, main = "ex7_5e의 SACF")
pacf(ex7_5e, lag.max = 12, main = "ex7_5e의 SPACF")
adfTest(ex7_5e, lags = 0, type = "c") # c : case2 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5e, lags = 1, type = "c")
adfTest(ex7_5e, lags = 2, type = "c")
fit1 = arima(ex7_5d, order = c(1,0,0)) # AR(1) 모형 적합
coeftest(fit1)
sum(fit1$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5e, 1,0,0) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5e, 6, 1, 0, 0) # 예측값의 시계열 그림
sarima.for(ex7_5e, 12, 1, 0, 0) # 예측값의 시계열 그림
fit2 = arima(ex7_5d, order = c(1,0,0), include.mean = FALSE) # AR(1) 모형 적합
library(glue)
z = scan(glue(dataset_dir, "/ex7_5e.txt"))
length(z)
ex7_5e = ts(z)
ts.plot(ex7_5e, ylab = "ex7_5e", main = "모의실험 자료")
acf(ex7_5e, lag.max = 24, main = "ex7_5e의 SACF")
pacf(ex7_5e, lag.max = 12, main = "ex7_5e의 SPACF")
adfTest(ex7_5e, lags = 0, type = "c") # c : case2 ; 절편이 있고 추세도 있는 경우
adfTest(ex7_5e, lags = 1, type = "c")
adfTest(ex7_5e, lags = 2, type = "c")
fit1 = arima(ex7_5d, order = c(1,0,0)) # AR(1) 모형 적합
coeftest(fit1)
sum(fit1$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5e, 1,0,0) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5e, 6, 1, 0, 0) # 예측값의 시계열 그림
sarima.for(ex7_5e, 12, 1, 0, 0) # 예측값의 시계열 그림
fit2 = arima(ex7_5d, order = c(1,0,0), include.mean = FALSE, method = "ML") # AR(1) 모형 적합
coeftest(fit2)
sum(fit2$residuals^2)/n
ts.plot(fit2$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit2$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit2), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit2), col = "red")
LjungBox(fit2, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(ex7_5e, 1,0,0) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(ex7_5e, 6, 1, 0, 0) # 예측값의 시계열 그림
sarima.for(ex7_5e, 12, 1, 0, 0) # 예측값의 시계열 그림
library(glue)
z = scan(glue(dataset_dir, "/interest.txt"))
n = length(z)
interest = ts(z, frequency = 12)
ts.plot(interest, ylab = "interest", main = "이자율 자료")
acf(interest, lag.max = 24, main = "이자율의 SACF")
pacf(interest, lag.max = 24, main = "이자율의 SPACF")
library(glue)
z = scan(glue(dataset_dir, "/interest.txt"))
n = length(z)
interest = ts(z)
ts.plot(interest, ylab = "interest", main = "이자율 자료")
acf(interest, lag.max = 24, main = "이자율의 SACF")
pacf(interest, lag.max = 24, main = "이자율의 SPACF")
library(glue)
z = scan(glue(dataset_dir, "/interest.txt"))
n = length(z)
interest = ts(z)
ts.plot(interest, ylab = "interest", main = "이자율 자료")
acf(interest, lag.max = 24, main = "이자율의 SACF")
pacf(interest, lag.max = 24, main = "이자율의 SPACF")
adfTest(interest, lags = 0, type = "c") # c : case2 ; 절편이 있고 추세도 있는 경우
adfTest(interest, lags = 1, type = "c")
adfTest(interest, lags = 2, type = "c")
library(glue)
z = scan(glue(dataset_dir, "/interest.txt"))
n = length(z)
interest = ts(z)
ts.plot(interest, ylab = "interest", main = "이자율 자료")
acf(interest, lag.max = 24, main = "이자율의 SACF")
pacf(interest, lag.max = 24, main = "이자율의 SPACF")
adfTest(interest, lags = 0, type = "c") # c : case2 ; 절편이 있고 추세도 있는 경우
adfTest(interest, lags = 1, type = "c")
adfTest(interest, lags = 2, type = "c")
diff_int = diff(interest, lag = 1)
ts.plot(diff_int, ylab = "diff_int", main = "1차 차분된 이자율 자료")
acf(diff_int, lag.max = 24, main = "1차 차분된 이자율의 SACF")
pacf(diff_int, lag.max = 24, main = "1차 차분된 이자율의 SPACF")
library(glue)
z = scan(glue(dataset_dir, "/interest.txt"))
n = length(z)
interest = ts(z)
ts.plot(interest, ylab = "interest", main = "이자율 자료")
acf(interest, lag.max = 24, main = "이자율의 SACF")
pacf(interest, lag.max = 24, main = "이자율의 SPACF")
adfTest(interest, lags = 0, type = "c") # c : case2 ; 절편이 있고 추세도 있는 경우
adfTest(interest, lags = 1, type = "c")
adfTest(interest, lags = 2, type = "c")
diff_int = diff(interest, lag = 1)
ts.plot(diff_int, ylab = "diff_int", main = "1차 차분된 이자율 자료")
acf(diff_int, lag.max = 24, main = "1차 차분된 이자율의 SACF")
pacf(diff_int, lag.max = 24, main = "1차 차분된 이자율의 SPACF")
fit1 = arima(interest, order = c(1,1,0)) # 1차 차분된 AR(1) 모형 적합
coeftest(fit1)
sum(fit1$residuals^2)/n
fit2 = arima(interest, order = c(0,1,1)) # 1차 차분된 MA(1) 모형 적합
coeftest(fit2)
sum(fit2$residuals^2)/n
library(glue)
z = scan(glue(dataset_dir, "/interest.txt"))
n = length(z)
interest = ts(z)
ts.plot(interest, ylab = "interest", main = "이자율 자료")
acf(interest, lag.max = 24, main = "이자율의 SACF")
pacf(interest, lag.max = 24, main = "이자율의 SPACF")
adfTest(interest, lags = 0, type = "c") # c : case2 ; 절편이 있고 추세도 있는 경우
adfTest(interest, lags = 1, type = "c")
adfTest(interest, lags = 2, type = "c")
diff_int = diff(interest, lag = 1)
ts.plot(diff_int, ylab = "diff_int", main = "1차 차분된 이자율 자료")
acf(diff_int, lag.max = 24, main = "1차 차분된 이자율의 SACF")
pacf(diff_int, lag.max = 24, main = "1차 차분된 이자율의 SPACF")
fit1 = arima(interest, order = c(1,1,0)) # 1차 차분된 AR(1) 모형 적합
coeftest(fit1)
sum(fit1$residuals^2)/n
fit2 = arima(interest, order = c(0,1,1)) # 1차 차분된 MA(1) 모형 적합
coeftest(fit2)
sum(fit2$residuals^2)/n
ts.plot(fit1$residuals, main = "적합된 모형의 잔차 시계열그림"); abline(h = 0)
acf2(fit1$residuals, max.lag = 24, main = "적합된 모형의 잔차 SACF와 SPACF")
qqnorm(resid(fit1), main = "적합된 모형의 잔차의 정규성검정")
qqline(resid(fit1), col = "red")
LjungBox(fit1, lags = seq(6, 24, 6)) # 잔차의 포트맨토 검정
sarima(interest, 1,1,0) # sarima를 이용한 모형 적합을 이용한 경우
sarima.for(interest, 6, 1, 1, 0) # 예측값의 시계열 그림
sarima.for(interest, 12, 1, 1, 0) # 예측값의 시계열 그림
5 + (-0.2)*(1.08) + (0.3)*(2.6)
2 + (-0.2) * (5.564) + (0.3)*(1.08)
(0.2)*(1.2112) - (0.3)*(5.564)
(0.3)*(1.2112)
