legend.background=element_rect(fill="transparent"),
legend.title=element_blank(),
legend.direction = "horizontal")
library(astsa) # library for function acf2
library(glue)
ex2_5_dir = glue(dataset_dir, "/ex2_5.txt")
ex2_5 <- scan(ex2_5_dir)
n <- length(ex2_5)
plot(seq(1, 30, 1), ex2_5, type = "o")
time <- ts(n, frequency = 6, start = c(1, 1))
ex2_5.ts <- ts(ex2_5, frequency = 6, start = c(1, 1))
ts.plot(ex2_5.ts)
# lndept = log(dept.ts) ; y = factor(cycle(time))
#
# fit <- lm(lndept ~ 0 + time + y)
# anova(fit) ; summary(fit)
#
# resid.ts = ts(resid(fit), start = c(1984, 1), frequency = 12)
# acf2(resid.ts, main = "Residual ACF & PACF")
t = seq(1, n, 1) ; one = c(rep(1, n)) ; Zt = ex2_5 ; X = cbind(one, t)
lm_fit = lm(Zt ~ t)
beta_hat_lse = lm_fit$coefficients
beta_hat_lse
Zt_hat = X %*% beta_hat_lse
et = Zt - Zt_hat
plot(t, et, type = "o")
sum_Zt_t = sum(Zt/t) ; sum_Zt = sum(Zt) ; sum_t = sum(1/t)
beta_0_hat_wls = ((n+1)*sum_Zt_t - 2*sum_Zt)/ ((n+1)*sum_t - 2*n)
beta_1_hat_wls = ((2/n)*sum_t*sum_Zt - 2*sum_Zt_t)/ ((n+1)*sum_t - 2*n)
beta_hat_wls = c(beta_0_hat_wls, beta_1_hat_wls)
beta_hat_wls
Zt_hat_wls = X %*% beta_hat_wls
et_wls = Zt - Zt_hat_wls
plot(t, et_wls, type = "o")
ts_df = data.frame(et, et_wls)
ts_df = ts(ts_df)
ts.plot(ts_df, xlab = "t", lty = 1:3, col = c("blue", "red"))
legend("bottomleft", lty = 1:3, col = c("blue", "red"), legend = c("et", "et_wls"))
library(astsa) # library for function acf2
library(glue)
depart_dir = glue(dataset_dir, "/depart.txt")
depart <- scan(depart_dir)
n <- length(depart)
t = seq(1, n, 1)
depart
plot(t, depart, type = "o")
one = c(rep(1, n)) ; t = seq(1, n, 1)
sint = sin(2*pi*t/12) ; cost = cos(2*pi*t/12)
X = cbind(one, t, sint, cost) ; Zt = depart
beta_hat = solve(t(X) %*% X) %*% t(X) %*% Zt
round(beta_hat, 2)
Zt_hat = X %*% beta_hat
et = Zt - Zt_hat
et.ts = ts(et)
ts.plot(et.ts, lty = 1, col = c("red"), main = "잔차 산점도")
legend("topright", lty = 1, col = c("red"), legend = c("et"))
## 로그 변환 후 적합
lnZt = log(Zt)
beta_hat_tr = solve(t(X) %*% X) %*% t(X) %*% lnZt
round(beta_hat_tr, 2)
lnZt_hat = X %*% beta_hat_tr ; Zt_hat_tr = exp(lnZt_hat)
et_tr = Zt - Zt_hat_tr
et_tr.ts = ts(et_tr)
ts.plot(et_tr.ts, lty = 2, col = c("blue"), main = "잔차 산점도")
legend("topright", lty = 2, col = c("blue"), legend = c("et_logt"))
et_df = data.frame(et, et_tr)
et_df = ts(et_df)
ts.plot(et_df, lty = 1:2, col = c("red", "blue"), main = "잔차 산점도")
legend("topright", lty = 1:2, col = c("red", "blue"), legend = c("et", "et_log"))
plot(Zt, et, col = "red", lty = 1, type = "b")
plot(Zt, et_tr, col = "blue", lty = 2, type = "b")
## (a)
z <- scan(glue(dataset_dir, "/female.txt"))
female <- ts(z, start = c(1984, 1), frequency = 12)
n = length(female) ; t = seq(1, n, 1)
plot(female, ylab = "Index", xlab = "year", lty = 1, col = "black",
main = glue("월별 여성근로자수 시각화"))
lm_fit = lm(female ~ t)
lm_fit$coefficients
MSE = sum(lm_fit$residuals^2) / n
print(glue("MSE = {MSE}"))
ts.plot(lm_fit$residuals, ylab = "residual", main = "선형추세모형의 예측오차") ; abline(h = 0)
acf(lm_fit$residuals, main = "Residual ACF")
t.test(lm_fit$residuals, mu = 0)
z_hat_ts <- ts(lm_fit$fitted.values,
start = start(female),       # c(1984, 1)
frequency = frequency(female))  # 12
plot(female, ylab = "Index", xlab = "year", lty = 1, col = "black",
main = glue("월별 여성근로자수와 선형추세모형"))
lines(z_hat_ts, col = "red", lty = 2)
legend("topleft", lty = 1:2, col = c("black", "red"), c("Index", "Linear"))
## 예측값의 95% 신뢰구간
t_new = seq(n+1, n+12, 1) ; t_new_df = data.frame(t = t_new) ; h = length(t_new)
x0 = c(rep(1, n)) ; X = cbind(x0, t)
x0_new = c(rep(1, length(t_new))) ; X_new = cbind(x0_new, t_new)
var_hat_e_hat_nl = as.numeric(MSE) * (diag(1, dim(X_new)[1]) + X_new %*% solve( t(X) %*% X ) %*% t(X_new))
se_pred = sqrt(diag(var_hat_e_hat_nl))
### 예측
z_hat_new = predict(lm_fit, newdata = t_new_df)
print(glue("z_hat_12 = {z_hat_new[12]}"))
z_hat_ts_new <- ts(z_hat_new,
start = start(female),       # c(1984, 1)
frequency = frequency(female))  # 12
### 95% 신뢰구간
t_alpha = qt(0.025, n - 2, lower.tail = FALSE)
CI_lower = z_hat_new - t_alpha * se_pred
CI_upper = z_hat_new + t_alpha * se_pred
# t_ = c(t, t_new) ; z_hat_ts_ = c(z_hat_ts, z_hat_ts_new) ; female_ = c(female, c(rep(NA, length(t_new))))
### 시각화
# 과거(actual) + 미래(forecast) x축
time_actual <- time(female)
time_fc     <- time_actual[n] + (1:h)/frequency(female)
ymin <- min(female, z_hat_new, CI_lower)
ymax <- max(female, z_hat_new, CI_upper)
ts.plot(female, z_hat_ts,
xlim = c(time_actual[1], time_fc[h]),
ylim = c(ymin, ymax),
col = c("black","red"),
lty = c(1,2),
ylab="Index", xlab="Year",
main="월별 여성근로자수와 선형추세모형")
# point forecast
lines(time_fc, z_hat_new,
col = "blue", lty = 1)
# prediction interval
lines(time_fc, CI_lower,
col = "lightblue", lty = 2)
lines(time_fc, CI_upper,
col = "lightblue", lty = 2)
band_col <- rgb(173/255, 216/255, 230/255, alpha=0.4)  # 연한 하늘색 반투명
polygon(
x = c(time_fc, rev(time_fc)),
y = c(CI_lower, rev(CI_upper)),
col = band_col,
border = NA
)
legend("topleft",
legend = c("Actual","Fitted","Forecast","95% PI"),
col    = c("black","red","blue","lightblue"),
lty    = c(1,2,1,2),
bty    = "n")
## (b)
z <- scan(glue(dataset_dir, "/build.txt"))
build <- ts(z, start = c(1984, 1), frequency = 12)
n = length(build) ; t = seq(1, n, 1)
plot(build, ylab = "Index", xlab = "year", lty = 1, col = "black",
main = glue("월별 건축허가면적 시각화"))
sin_t = sin(2*pi*t/12) ; cos_t = cos(2*pi*t/12)
lm_fit = lm(build ~ t + sin_t + cos_t)
lm_fit$coefficients
MSE = sum(lm_fit$residuals^2) / n
print(glue("MSE = {MSE}"))
# trend = time(build) - 1984
# y = factor(cycle(build)) # factor를 이용한 월별 factor 생성
# lm_fit2 = lm(build ~ 0 + trend + y)
# MSE2 = sum(lm_fit2$residuals^2) / n
# print(glue("MSE2 = {MSE2}"))
ts.plot(lm_fit$residuals, ylab = "residual", main = "선형추세모형의 예측오차") ; abline(h = 0)
acf(lm_fit$residuals, main = "Residual ACF")
t.test(lm_fit$residuals, mu = 0)
z_hat_ts <- ts(lm_fit$fitted.values,
start = start(female),       # c(1984, 1)
frequency = frequency(female))  # 12
plot(build, ylab = "Index", xlab = "year", lty = 1, col = "black",
main = glue("월별 건축허가면적과 선형계절추세모형"))
lines(z_hat_ts, col = "red", lty = 2)
legend("topleft", lty = 1:2, col = c("black", "red"), c("Index", "Linear Seasonal Trend"))
## 예측값의 95% 신뢰구간
t_new = seq(n+1, n+12, 1)
h = length(t_new)
x0 = c(rep(1, n)) ; X = cbind(x0, t, sin_t, cos_t)
x0_new = c(rep(1, length(t_new))) ; sin_t_new = sin(2*pi*t_new/12)
cos_t_new = cos(2*pi*t_new/12) ; X_new = cbind(x0_new, t_new, sin_t_new, cos_t_new)
t_new_df = data.frame(t = t_new, sin_t = sin_t_new, cos_t = cos_t_new)
var_hat_e_hat_nl = as.numeric(MSE) * (diag(1, dim(X_new)[1]) + X_new %*% solve( t(X) %*% X ) %*% t(X_new))
se_pred = sqrt(diag(var_hat_e_hat_nl)) ;se_pred
### 예측
z_hat_new = predict(lm_fit, newdata = t_new_df)
print(glue("z_hat_12 = {z_hat_new[12]}"))
z_hat_ts_new <- ts(z_hat_new,
start = start(build),       # c(1984, 1)
frequency = frequency(build))  # 12
### 95% 신뢰구간
t_alpha = qt(0.025, n - 2, lower.tail = FALSE)
CI_lower = z_hat_new - t_alpha * se_pred
CI_upper = z_hat_new + t_alpha * se_pred
# t_ = c(t, t_new) ; z_hat_ts_ = c(z_hat_ts, z_hat_ts_new) ; female_ = c(female, c(rep(NA, length(t_new))))
### 시각화
# 과거(actual) + 미래(forecast) x축
time_actual <- time(build)
time_fc     <- time_actual[n] + (1:h)/frequency(build)
ymin <- min(build, z_hat_new, CI_lower)
ymax <- max(build, z_hat_new, CI_upper)
ts.plot(build, z_hat_ts,
xlim = c(time_actual[1], time_fc[h]),
ylim = c(ymin, ymax),
col = c("black","red"),
lty = c(1,2),
ylab="Index", xlab="Year",
main="월별 건축허가면적과 선형계절추세모형")
# point forecast
lines(time_fc, z_hat_new,
col = "blue", lty = 1)
# prediction interval
lines(time_fc, CI_lower,
col = "lightblue", lty = 2)
lines(time_fc, CI_upper,
col = "lightblue", lty = 2)
band_col <- rgb(173/255, 216/255, 230/255, alpha=0.4)  # 연한 하늘색 반투명
polygon(
x = c(time_fc, rev(time_fc)),
y = c(CI_lower, rev(CI_upper)),
col = band_col,
border = NA
)
legend("topleft",
legend = c("Actual","Fitted","Forecast","95% PI"),
col    = c("black","red","blue","lightblue"),
lty    = c(1,2,1,2),
bty    = "n")
## (c)
z <- scan(glue(dataset_dir, "/export.txt"))
export <- ts(z, start = c(1984, 1), frequency = 12)
n = length(export) ; t = seq(1, n, 1) ; n
plot(export, ylab = "Index", xlab = "year", lty = 1, col = "black",
main = glue("월별 수출액(단위 : 억$) 시각화"))
sin_t = sin(2*pi*t/12) ; cos_t = cos(2*pi*t/12)
lm_fit = lm(export ~ t + sin_t + cos_t)
lm_fit$coefficients
MSE = sum(lm_fit$residuals^2) / n
print(glue("MSE = {MSE}"))
ts.plot(lm_fit$residuals, ylab = "residual", main = "선형추세모형의 예측오차") ; abline(h = 0)
acf(lm_fit$residuals, main = "Residual ACF")
t.test(lm_fit$residuals, mu = 0)
z_hat_ts <- ts(lm_fit$fitted.values,
start = start(export),       # c(1984, 1)
frequency = frequency(export))  # 12
plot(export, ylab = "Index", xlab = "year", lty = 1, col = "black",
main = glue("월별 수출액(단위 : 억$)과 선형계절추세모형"))
lines(z_hat_ts, col = "red", lty = 2)
legend("topleft", lty = 1:2, col = c("black", "red"), c("Index", "Linear Seasonal Trend"))
## 예측값의 95% 신뢰구간
t_new = seq(n+1, n+12, 1)
h = length(t_new)
x0 = c(rep(1, n)) ; X = cbind(x0, t, sin_t, cos_t)
x0_new = c(rep(1, length(t_new))) ; sin_t_new = sin(2*pi*t_new/12)
cos_t_new = cos(2*pi*t_new/12) ; X_new = cbind(x0_new, t_new, sin_t_new, cos_t_new)
t_new_df = data.frame(t = t_new, sin_t = sin_t_new, cos_t = cos_t_new)
var_hat_e_hat_nl = as.numeric(MSE) * (diag(1, dim(X_new)[1]) + X_new %*% solve( t(X) %*% X ) %*% t(X_new))
se_pred = sqrt(diag(var_hat_e_hat_nl)) ;se_pred
### 예측
z_hat_new = predict(lm_fit, newdata = t_new_df)
print(glue("z_hat_12 = {z_hat_new[12]}"))
z_hat_ts_new <- ts(z_hat_new,
start = start(export),       # c(1984, 1)
frequency = frequency(export))  # 12
### 95% 신뢰구간
t_alpha = qt(0.025, n - 2, lower.tail = FALSE)
CI_lower = z_hat_new - t_alpha * se_pred
CI_upper = z_hat_new + t_alpha * se_pred
# t_ = c(t, t_new) ; z_hat_ts_ = c(z_hat_ts, z_hat_ts_new) ; female_ = c(female, c(rep(NA, length(t_new))))
### 시각화
# 과거(actual) + 미래(forecast) x축
time_actual <- time(export)
time_fc     <- time_actual[n] + (1:h)/frequency(build)
ymin <- min(export, z_hat_new, CI_lower)
ymax <- max(export, z_hat_new, CI_upper)
ts.plot(export, z_hat_ts,
xlim = c(time_actual[1], time_fc[h]),
ylim = c(ymin, ymax),
col = c("black","red"),
lty = c(1,2),
ylab="Index", xlab="Year",
main="월별 수출액(단위 : 억$)과 선형계절추세모형")
# point forecast
lines(time_fc, z_hat_new,
col = "blue", lty = 1)
# prediction interval
lines(time_fc, CI_lower,
col = "lightblue", lty = 2)
lines(time_fc, CI_upper,
col = "lightblue", lty = 2)
band_col <- rgb(173/255, 216/255, 230/255, alpha=0.4)  # 연한 하늘색 반투명
polygon(
x = c(time_fc, rev(time_fc)),
y = c(CI_lower, rev(CI_upper)),
col = band_col,
border = NA
)
legend("topleft",
legend = c("Actual","Fitted","Forecast","95% PI"),
col    = c("black","red","blue","lightblue"),
lty    = c(1,2,1,2),
bty    = "n")
## (d)
z <- scan(glue(dataset_dir, "/usapass.txt"))
usapass <- ts(z, start = c(1984, 1), frequency = 12)
n = length(usapass) ; t = seq(1, n, 1) ; n
plot(usapass, ylab = "Index", xlab = "year", lty = 1, col = "black",
main = glue("미국 월별 비행기 승객 수(단위 : 천 명) 시각화"))
sin_t = sin(2*pi*t/12) ; cos_t = cos(2*pi*t/12)
lm_fit = lm(usapass ~ t + sin_t + cos_t)
lm_fit$coefficients
MSE = sum(lm_fit$residuals^2) / n
print(glue("MSE = {MSE}"))
ts.plot(lm_fit$residuals, ylab = "residual", main = "선형계절추세모형의 예측오차") ; abline(h = 0)
acf(lm_fit$residuals, main = "Residual ACF")
t.test(lm_fit$residuals, mu = 0)
z_hat_ts <- ts(lm_fit$fitted.values,
start = start(usapass),       # c(1984, 1)
frequency = frequency(usapass))  # 12
plot(usapass, ylab = "Index", xlab = "year", lty = 1, col = "black",
main = glue("미국 월별 비행기 승객 수(단위 : 천 명)과 선형계절추세모형"))
lines(z_hat_ts, col = "red", lty = 2)
legend("topleft", lty = 1:2, col = c("black", "red"), c("Index", "Linear Seasonal Trend"))
## 예측값의 95% 신뢰구간
t_new = seq(n+1, n+12, 1)
h = length(t_new)
x0 = c(rep(1, n)) ; X = cbind(x0, t, sin_t, cos_t)
x0_new = c(rep(1, length(t_new))) ; sin_t_new = sin(2*pi*t_new/12)
cos_t_new = cos(2*pi*t_new/12) ; X_new = cbind(x0_new, t_new, sin_t_new, cos_t_new)
t_new_df = data.frame(t = t_new, sin_t = sin_t_new, cos_t = cos_t_new)
var_hat_e_hat_nl = as.numeric(MSE) * (diag(1, dim(X_new)[1]) + X_new %*% solve( t(X) %*% X ) %*% t(X_new))
se_pred = sqrt(diag(var_hat_e_hat_nl)) ;se_pred
### 예측
z_hat_new = predict(lm_fit, newdata = t_new_df)
print(glue("z_hat_12 = {z_hat_new[12]}"))
z_hat_ts_new <- ts(z_hat_new,
start = start(usapass),       # c(1984, 1)
frequency = frequency(usapass))  # 12
### 95% 신뢰구간
t_alpha = qt(0.025, n - 2, lower.tail = FALSE)
CI_lower = z_hat_new - t_alpha * se_pred
CI_upper = z_hat_new + t_alpha * se_pred
# t_ = c(t, t_new) ; z_hat_ts_ = c(z_hat_ts, z_hat_ts_new) ; female_ = c(female, c(rep(NA, length(t_new))))
### 시각화
# 과거(actual) + 미래(forecast) x축
time_actual <- time(usapass)
time_fc     <- time_actual[n] + (1:h)/frequency(usapass)
ymin <- min(usapass, z_hat_new, CI_lower)
ymax <- max(usapass, z_hat_new, CI_upper)
ts.plot(usapass, z_hat_ts,
xlim = c(time_actual[1], time_fc[h]),
ylim = c(ymin, ymax),
col = c("black","red"),
lty = c(1,2),
ylab="Index", xlab="Year",
main="미국 월별 비행기 승객 수(단위 : 천 명)과 선형계절추세모형")
# point forecast
lines(time_fc, z_hat_new,
col = "blue", lty = 1)
# prediction interval
lines(time_fc, CI_lower,
col = "lightblue", lty = 2)
lines(time_fc, CI_upper,
col = "lightblue", lty = 2)
band_col <- rgb(173/255, 216/255, 230/255, alpha=0.4)  # 연한 하늘색 반투명
polygon(
x = c(time_fc, rev(time_fc)),
y = c(CI_lower, rev(CI_upper)),
col = band_col,
border = NA
)
legend("topleft",
legend = c("Actual","Fitted","Forecast","95% PI"),
col    = c("black","red","blue","lightblue"),
lty    = c(1,2,1,2),
bty    = "n")
z <- scan(glue(dataset_dir, "/stationery.txt"))
stationery <- ts(z, start = c(1984, 1), frequency = 7)
n = length(stationery) ; t = seq(1, n, 1) ; n
plot(stationery, ylab = "Index", xlab = "week", lty = 1, col = "black",
main = glue("일별 문구류 판매액(단위 : 천원) 시각화"))
sin_t = sin(2*pi*t/7) ; cos_t = cos(2*pi*t/7)
lm_fit = lm(stationery ~ sin_t + cos_t)
lm_fit$coefficients
MSE = sum(lm_fit$residuals^2) / n
print(glue("MSE = {MSE}"))
ts.plot(lm_fit$residuals, ylab = "residual", main = "선형계절모형의 예측오차") ; abline(h = 0)
acf(lm_fit$residuals, main = "Residual ACF")
t.test(lm_fit$residuals, mu = 0)
z_hat_ts <- ts(lm_fit$fitted.values,
start = start(stationery),
frequency = frequency(stationery))
plot(stationery, ylab = "Index", xlab = "week", lty = 1, col = "black",
main = glue("일별 문구류 판매액(단위 : 천원)과 선형계절모형"))
lines(z_hat_ts, col = "red", lty = 2)
legend("topleft", lty = 1:2, col = c("black", "red"), c("Index", "Seasonal"))
## 예측값의 95% 신뢰구간
t_new = seq(n+1, n+12, 1)
h = length(t_new)
x0 = c(rep(1, n)) ; X = cbind(x0, sin_t, cos_t)
x0_new = c(rep(1, length(t_new))) ; sin_t_new = sin(2*pi*t_new/12)
cos_t_new = cos(2*pi*t_new/12) ; X_new = cbind(x0_new, sin_t_new, cos_t_new)
t_new_df = data.frame(sin_t = sin_t_new, cos_t = cos_t_new)
var_hat_e_hat_nl = as.numeric(MSE) * (diag(1, dim(X_new)[1]) + X_new %*% solve( t(X) %*% X ) %*% t(X_new))
se_pred = sqrt(diag(var_hat_e_hat_nl)) ;se_pred
### 예측
z_hat_new = predict(lm_fit, newdata = t_new_df)
print(glue("z_hat_12 = {z_hat_new[12]}"))
z_hat_ts_new <- ts(z_hat_new,
start = start(stationery),
frequency = frequency(stationery))
### 95% 신뢰구간
t_alpha = qt(0.025, n - 2, lower.tail = FALSE)
CI_lower = z_hat_new - t_alpha * se_pred
CI_upper = z_hat_new + t_alpha * se_pred
# t_ = c(t, t_new) ; z_hat_ts_ = c(z_hat_ts, z_hat_ts_new) ; female_ = c(female, c(rep(NA, length(t_new))))
### 시각화
# 과거(actual) + 미래(forecast) x축
time_actual <- time(stationery)
time_fc     <- time_actual[n] + (1:h)/frequency(stationery)
ymin <- min(stationery, z_hat_new, CI_lower)
ymax <- max(stationery, z_hat_new, CI_upper)
ts.plot(stationery, z_hat_ts,
xlim = c(time_actual[1], time_fc[h]),
ylim = c(ymin, ymax),
col = c("black","red"),
lty = c(1,2),
ylab="Index", xlab="Year",
main="일별 문구류 판매액(단위 : 천원)과 선형계절모형")
# point forecast
lines(time_fc, z_hat_new,
col = "blue", lty = 1)
# prediction interval
lines(time_fc, CI_lower,
col = "lightblue", lty = 2)
lines(time_fc, CI_upper,
col = "lightblue", lty = 2)
band_col <- rgb(173/255, 216/255, 230/255, alpha=0.4)  # 연한 하늘색 반투명
polygon(
x = c(time_fc, rev(time_fc)),
y = c(CI_lower, rev(CI_upper)),
col = band_col,
border = NA
)
legend("topleft",
legend = c("Actual","Fitted","Forecast","95% PI"),
col    = c("black","red","blue","lightblue"),
lty    = c(1,2,1,2),
bty    = "n")
z <- scan(glue(dataset_dir, "/book.txt"))
book <- ts(z, frequency = 7)
n = length(book) ; t = seq(1, n, 1) ; n
plot(book, ylab = "Book", xlab = "Week", lty = 1, col = "black",
main = glue("일별 베스트셀러 판매부수(단위 : 권) 시각화"))
lm_fit = lm(book ~ t)
lm_fit$coefficients
MSE = sum(lm_fit$residuals^2) / n
print(glue("MSE = {MSE}"))
ts.plot(lm_fit$residuals, ylab = "residual", main = "선형추세모형의 예측오차") ; abline(h = 0)
acf(lm_fit$residuals, main = "Residual ACF")
t.test(lm_fit$residuals, mu = 0)
z_hat_ts <- ts(lm_fit$fitted.values,
start = start(book),
frequency = frequency(book))
plot(book, ylab = "Index", xlab = "week", lty = 1, col = "black",
main = glue("일별 베스트셀러 판매부수(단위 : 권)과 선형추세모형"))
lines(z_hat_ts, col = "red", lty = 2)
legend("topleft", lty = 1:2, col = c("black", "red"), c("Index", "Seasonal"))
## 예측값의 95% 신뢰구간
t_new = seq(n+1, n+12, 1)
h = length(t_new)
x0 = c(rep(1, n)) ; X = cbind(x0, t)
x0_new = c(rep(1, length(t_new))) ; X_new = cbind(x0_new, t_new)
t_new_df = data.frame(t = t_new)
var_hat_e_hat_nl = as.numeric(MSE) * (diag(1, dim(X_new)[1]) + X_new %*% solve( t(X) %*% X ) %*% t(X_new))
se_pred = sqrt(diag(var_hat_e_hat_nl)) ;se_pred
### 예측
z_hat_new = predict(lm_fit, newdata = t_new_df)
print(glue("z_hat_12 = {z_hat_new[12]}"))
z_hat_ts_new <- ts(z_hat_new,
start = start(book),
frequency = frequency(book))
### 95% 신뢰구간
t_alpha = qt(0.025, n - 2, lower.tail = FALSE)
CI_lower = z_hat_new - t_alpha * se_pred
CI_upper = z_hat_new + t_alpha * se_pred
# t_ = c(t, t_new) ; z_hat_ts_ = c(z_hat_ts, z_hat_ts_new) ; female_ = c(female, c(rep(NA, length(t_new))))
### 시각화
# 과거(actual) + 미래(forecast) x축
time_actual <- time(book)
time_fc     <- time_actual[n] + (1:h)/frequency(book)
ymin <- min(book, z_hat_new, CI_lower)
ymax <- max(book, z_hat_new, CI_upper)
ts.plot(book, z_hat_ts,
xlim = c(time_actual[1], time_fc[h]),
ylim = c(ymin, ymax),
col = c("black","red"),
lty = c(1,2),
ylab="Index", xlab="Year",
main="일별 베스트셀러 판매부수(단위 : 권)과 선형추세모형")
# point forecast
lines(time_fc, z_hat_new,
col = "blue", lty = 1)
# prediction interval
lines(time_fc, CI_lower,
col = "lightblue", lty = 2)
lines(time_fc, CI_upper,
col = "lightblue", lty = 2)
band_col <- rgb(173/255, 216/255, 230/255, alpha=0.4)  # 연한 하늘색 반투명
polygon(
x = c(time_fc, rev(time_fc)),
y = c(CI_lower, rev(CI_upper)),
col = band_col,
border = NA
)
legend("topleft",
legend = c("Actual","Fitted","Forecast","95% PI"),
col    = c("black","red","blue","lightblue"),
lty    = c(1,2,1,2),
bty    = "n")
